<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>THE SILENT ORCAS</title>
    <subtitle>Thoughts, tutorials, and insights on technology and cybersecurity</subtitle>
    <link rel="self" type="application/atom+xml" href="https://nothing-r.github.io/The_Orcas/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-08-06T00:00:00+00:00</updated>
    <id>https://nothing-r.github.io/The_Orcas/atom.xml</id>
    <entry xml:lang="en">
        <title>HOW TO CONFIGURE EMACS</title>
        <published>2025-08-06T00:00:00+00:00</published>
        <updated>2025-08-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/system/how-to-configure-emacs/"/>
        <id>https://nothing-r.github.io/The_Orcas/system/how-to-configure-emacs/</id>
        
        <content type="html" xml:base="https://nothing-r.github.io/The_Orcas/system/how-to-configure-emacs/">&lt;h1 id=&quot;basic-of-emacs&quot;&gt;BASIC OF EMACS&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;download.html&quot;&gt;Emacs&lt;&#x2F;a&gt; holo akta &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;&quot;&gt;gnu&lt;&#x2F;a&gt; software. Emacs mainly akta text editor. Kintu emacs sompurno ta e &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Emacs_Lisp&quot;&gt;emacs lisp&lt;&#x2F;a&gt; diye lekha to, emacs lisp diye sompurno emacs ta k e configure kora jai. Emacs ta k configure korar jonno emacs er basic concept gula bujhle e enough first a. Jdi r o besi valo kore bojha lage tkhn emacs lisp ta k valo vabe bojha lagbe o emacs lisp diye code kora sikhte hobe.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;basic-concept-of-emacs&quot;&gt;BASIC CONCEPT OF EMACS&lt;&#x2F;h1&gt;
&lt;p&gt;Emacs er &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;manual&#x2F;html_node&#x2F;emacs&#x2F;Frames.html&quot;&gt;Frames&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;manual&#x2F;html_node&#x2F;emacs&#x2F;Buffers.html&quot;&gt;Buffers&lt;&#x2F;a&gt; , &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;manual&#x2F;html_node&#x2F;emacs&#x2F;Windows.html&quot;&gt;Window&lt;&#x2F;a&gt;  basic package install, repo adding r basic package customization ta sikhle e emacs use kora jabe abong coto kno issue hoile nije e fix kora somvob.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;frames&quot;&gt;Frames&lt;&#x2F;h2&gt;
&lt;p&gt;Windows 10 ba 11 othoba linux er gnome othoba onno sob Desktop Environment a amra j vabe akta software open kori tkhn oi application ta akta window hisabe open hoi amra ay vabe akta software er 2-3 ta ba tar thekeo besi open korte pari. Emacs er bepar ta o same kintu emacs er akta akta window k Frame bole. Mane jdi emacs idvidualy 2 ba 3 bar open kora hoi to oi 2-3 ta window k emacs er ak akta frame bola hoi….To emacs er ak akta Instance k Frame bola hoi.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;window&quot;&gt;Window&lt;&#x2F;h2&gt;
&lt;p&gt;Emacs er window concept ta aktu alada. Amra akta emacs Frame k split korte pari. Jmn amra jdi C-x 2 use kori tahole Emacs er frame ta 2 ta alada windows a split hobe. C-x 2 Frame a nice akta alada window open korbe abong C-x 3 Frame er right side a akta window open korbe abong ay vabe issa moto joto khusi toto gula window te frame ta k split kora jabe.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;buffers&quot;&gt;BUFFERS&lt;&#x2F;h2&gt;
&lt;p&gt;Emacs er sob kicu e buffer. Amra ja e open kori oita e akta buffer. kno folder, file, image sob kicu e as a buffer open hoi &lt;code&gt;M-x RET ibuffer RET&lt;&#x2F;code&gt; dile ibuffer open hobe abong emacs a open thaka sob buffer dekha jabe. Emacs er kicu defult buffer ace, jkhn emacs open kora hoi tkhni oi buffer gula create hoi. Aygula hocce &lt;strong&gt;scratch&lt;&#x2F;strong&gt; abong &lt;strong&gt;Message&lt;&#x2F;strong&gt;. Message buffer a emacs a ja ja kora hocce tar sob kicu e Message buffer a paoya jai. R akta buffer create hoi jdi kno error ase oita hocce &lt;strong&gt;Warnings&lt;&#x2F;strong&gt; Buffer. Warnings buffer mainly error gula show kore ba kno package problems, config problem gula show kore.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;prerequirements&quot;&gt;PREREQUIREMENTS&lt;&#x2F;h1&gt;
&lt;p&gt;Emacs ta sekhar age vim ta k valo vabe sekha dorkar, karon amra emacs a evil mode use korbo, j ta emacs a vim keybinding use korbe. Vim er basic ta sekhar jonno vim basic er ay video ta dekhle normal editing easyly korte jabe:-&lt;&#x2F;p&gt;
&lt;iframe width=&quot;350&quot; height=&quot;200&quot;
  src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;z4eA2eC28qg&quot;
  title=&quot;YouTube video player&quot;
  frameborder=&quot;0&quot;
  allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot;
  allowfullscreen&gt;
  &lt;&#x2F;iframe&gt;
&lt;h1 id=&quot;emacs-configuretion&quot;&gt;EMACS CONFIGURETION&lt;&#x2F;h1&gt;
&lt;p&gt;Emacs mainly package er upor kaj kore, jemon arch ba debian er package repo er theke package download kora jai thik temon emacs er repo er theke j j package dorkar oi gula download kore emacs customize korte hoi. Ami amr config a total 4 ta repo use kori &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;progfolio&#x2F;elpaca&quot;&gt;elpaca&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;melpa.org&quot;&gt;melpa&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;elpa.gnu.org&#x2F;&quot;&gt;elpa&lt;&#x2F;a&gt; abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;orgmode.org&#x2F;&quot;&gt;org&lt;&#x2F;a&gt;. Ami sob package gulo ay repo theke e download kori. To emacs er main config file gula edit korar maddhome puro emacs ta k e customize kora jai. Emacs customize korar jonno mainly 2 ta file customize kora lage. init.el abong early-init.el.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;emacs-config-files&quot;&gt;EMACS CONFIG FILES&lt;&#x2F;h2&gt;
&lt;p&gt;Emacs er sob theke valo akta feature hocce &lt;code&gt;org mode&lt;&#x2F;code&gt;. Org mode er onk feature ace. Abong emacs use korle org mode file theke onno mode jemon markdown ba html a convert korao onk easy hoi. To nijer config file lekahr jonno org file use kora best.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;directory-structure&quot;&gt;Directory Structure&lt;&#x2F;h2&gt;
&lt;p&gt;First a amader .config&#x2F;emacs&#x2F; directory ta banaite hobe abong amader system a kno .emacs.d directory thakle oita k delete kore dite hobe. R directory er vitore 3 ta file create korte hobe init.el, early-init.el abong config.org.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;rm -rf ~&#x2F;.emacs.d
&lt;&#x2F;span&gt;&lt;span&gt;mkdir -p ~&#x2F;.config&#x2F;emacs
&lt;&#x2F;span&gt;&lt;span&gt;touch -p ~&#x2F;.config&#x2F;emacs&#x2F;init.el
&lt;&#x2F;span&gt;&lt;span&gt;touch -p ~&#x2F;.config&#x2F;emacs&#x2F;early-init.el
&lt;&#x2F;span&gt;&lt;span&gt;touch -p ~&#x2F;.config&#x2F;emacs&#x2F;config.org
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;init-el&quot;&gt;INIT.EL&lt;&#x2F;h2&gt;
&lt;p&gt;First a amader .config&#x2F;emacs&#x2F;init.el file ta edit korte hobe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;vim .config&#x2F;emacs&#x2F;init.el
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Abong er pore file ta te ay line gulo add korte hobe. Ay line gulo init.el file k bole j amra amader config file hisabe config.org file ta use korbo&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(org-babel-load-file
&lt;&#x2F;span&gt;&lt;span&gt; (expand-file-name
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;config.org&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  user-emacs-directory))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;early-init-el&quot;&gt;EARLY-INIT.EL&lt;&#x2F;h2&gt;
&lt;p&gt;Amra jkhn amader repo hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;progfolio&#x2F;elpaca&quot;&gt;elpaca&lt;&#x2F;a&gt; use kori tkhn amader r o extra akta file add kora lage amader emacs folder a early-init.el ja elpaca er repo teo lekha ace.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;vim ~&#x2F;.config&#x2F;emacs&#x2F;early-init.el
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;File ta te ay line ta add kore dite hobe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(setq package-enable-at-startup nil)
&lt;&#x2F;span&gt;&lt;span&gt;;; (add-to-list &amp;#39;default-frame-alist &amp;#39;(font . &amp;quot;JetBrains Mono-11&amp;quot;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;config-org&quot;&gt;CONFIG.ORG&lt;&#x2F;h2&gt;
&lt;p&gt;Aybar amra amader Emacs ta k configure kora suru korbo. Configuretion er jonno sobar e alada alada approch ace. Ami first a repo gulo setup kori. Elpaca er repo theke elpaca er code ta ane just ay jagai paste kore dile e elpaca setup hoye jabe.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;elpaca&quot;&gt;ELPACA&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defvar elpaca-installer-version 0.11)
&lt;&#x2F;span&gt;&lt;span&gt;(defvar elpaca-directory (expand-file-name &amp;quot;elpaca&#x2F;&amp;quot; user-emacs-directory))
&lt;&#x2F;span&gt;&lt;span&gt;(defvar elpaca-builds-directory (expand-file-name &amp;quot;builds&#x2F;&amp;quot; elpaca-directory))
&lt;&#x2F;span&gt;&lt;span&gt;(defvar elpaca-repos-directory (expand-file-name &amp;quot;repos&#x2F;&amp;quot; elpaca-directory))
&lt;&#x2F;span&gt;&lt;span&gt;(defvar elpaca-order &amp;#39;(elpaca :repo &amp;quot;https:&#x2F;&#x2F;github.com&#x2F;progfolio&#x2F;elpaca.git&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                              :ref nil :depth 1 :inherit ignore
&lt;&#x2F;span&gt;&lt;span&gt;                              :files (:defaults &amp;quot;elpaca-test.el&amp;quot; (:exclude &amp;quot;extensions&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;                              :build (:not elpaca--activate-package)))
&lt;&#x2F;span&gt;&lt;span&gt;(let* ((repo  (expand-file-name &amp;quot;elpaca&#x2F;&amp;quot; elpaca-repos-directory))
&lt;&#x2F;span&gt;&lt;span&gt;       (build (expand-file-name &amp;quot;elpaca&#x2F;&amp;quot; elpaca-builds-directory))
&lt;&#x2F;span&gt;&lt;span&gt;       (order (cdr elpaca-order))
&lt;&#x2F;span&gt;&lt;span&gt;       (default-directory repo))
&lt;&#x2F;span&gt;&lt;span&gt;  (add-to-list &amp;#39;load-path (if (file-exists-p build) build repo))
&lt;&#x2F;span&gt;&lt;span&gt;  (unless (file-exists-p repo)
&lt;&#x2F;span&gt;&lt;span&gt;    (make-directory repo t)
&lt;&#x2F;span&gt;&lt;span&gt;    (when (&amp;lt;= emacs-major-version 28) (require &amp;#39;subr-x))
&lt;&#x2F;span&gt;&lt;span&gt;    (condition-case-unless-debug err
&lt;&#x2F;span&gt;&lt;span&gt;        (if-let* ((buffer (pop-to-buffer-same-window &amp;quot;*elpaca-bootstrap*&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;                  ((zerop (apply #&amp;#39;call-process `(&amp;quot;git&amp;quot; nil ,buffer t &amp;quot;clone&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                                                  ,@(when-let* ((depth (plist-get order :depth)))
&lt;&#x2F;span&gt;&lt;span&gt;                                                      (list (format &amp;quot;--depth=%d&amp;quot; depth) &amp;quot;--no-single-branch&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;                                                  ,(plist-get order :repo) ,repo))))
&lt;&#x2F;span&gt;&lt;span&gt;                  ((zerop (call-process &amp;quot;git&amp;quot; nil buffer t &amp;quot;checkout&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                                        (or (plist-get order :ref) &amp;quot;--&amp;quot;))))
&lt;&#x2F;span&gt;&lt;span&gt;                  (emacs (concat invocation-directory invocation-name))
&lt;&#x2F;span&gt;&lt;span&gt;                  ((zerop (call-process emacs nil buffer nil &amp;quot;-Q&amp;quot; &amp;quot;-L&amp;quot; &amp;quot;.&amp;quot; &amp;quot;--batch&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                                        &amp;quot;--eval&amp;quot; &amp;quot;(byte-recompile-directory \&amp;quot;.\&amp;quot; 0 &amp;#39;force)&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;                  ((require &amp;#39;elpaca))
&lt;&#x2F;span&gt;&lt;span&gt;                  ((elpaca-generate-autoloads &amp;quot;elpaca&amp;quot; repo)))
&lt;&#x2F;span&gt;&lt;span&gt;            (progn (message &amp;quot;%s&amp;quot; (buffer-string)) (kill-buffer buffer))
&lt;&#x2F;span&gt;&lt;span&gt;          (error &amp;quot;%s&amp;quot; (with-current-buffer buffer (buffer-string))))
&lt;&#x2F;span&gt;&lt;span&gt;      ((error) (warn &amp;quot;%s&amp;quot; err) (delete-directory repo &amp;#39;recursive))))
&lt;&#x2F;span&gt;&lt;span&gt;  (unless (require &amp;#39;elpaca-autoloads nil t)
&lt;&#x2F;span&gt;&lt;span&gt;    (require &amp;#39;elpaca)
&lt;&#x2F;span&gt;&lt;span&gt;    (elpaca-generate-autoloads &amp;quot;elpaca&amp;quot; repo)
&lt;&#x2F;span&gt;&lt;span&gt;    (let ((load-source-file-function nil)) (load &amp;quot;.&#x2F;elpaca-autoloads&amp;quot;))))
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;after-init-hook #&amp;#39;elpaca-process-queues)
&lt;&#x2F;span&gt;&lt;span&gt;(elpaca `(,@elpaca-order))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;setting-up-use-package-support&quot;&gt;SETTING UP “use-package” support&lt;&#x2F;h3&gt;
&lt;p&gt;Package install korar jonno nijer code tuku add korte hobe. Ayta elcapa er main code er ses a add kore dite hobe.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Install use-package support
&lt;&#x2F;span&gt;&lt;span&gt;(elpaca elpaca-use-package
&lt;&#x2F;span&gt;&lt;span&gt;  ;; Enable use-package :ensure support for Elpaca.
&lt;&#x2F;span&gt;&lt;span&gt;  (elpaca-use-package-mode))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;some-repo&quot;&gt;SOME REPO&lt;&#x2F;h3&gt;
&lt;p&gt;R o 3 ta repo add korte hobe, ay gula kicu package er jonno proyojon ja amra elpaca te pabo na.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;package)
&lt;&#x2F;span&gt;&lt;span&gt;(setq package-archives
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;#39;((&amp;quot;gnu&amp;quot; . &amp;quot;https:&#x2F;&#x2F;elpa.gnu.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;melpa&amp;quot; . &amp;quot;https:&#x2F;&#x2F;melpa.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;org&amp;quot; . &amp;quot;https:&#x2F;&#x2F;orgmode.org&#x2F;elpa&#x2F;&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;(package-initialize)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;doom-modelime-and-doom-theme&quot;&gt;DOOM MODELIME AND DOOM THEME&lt;&#x2F;h3&gt;
&lt;p&gt;Emacs er defult theme r modeline ta change korar jonno amra doom modeline abong theme install korbo. Jate kore amra thik vabe emacs a kaj korte pari. Mainly cokher santi er jonno😌.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package doom-modeline
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (doom-modeline-mode 1))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(set-face-attribute &amp;#39;mode-line nil
&lt;&#x2F;span&gt;&lt;span&gt;                    :font &amp;quot;FiraCode Nerd Font&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                    :height 140)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;======= DOOM THEMES ======= 
&lt;&#x2F;span&gt;&lt;span&gt;;; :&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; FIRST INSTALL ER SMY AY LINE GULO UNCOMMENT RAKHA LAGBE SECOND BOOT ER SMY ABR COMMENT KORE DITE HOBE &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;:
&lt;&#x2F;span&gt;&lt;span&gt;;; (elpaca
&lt;&#x2F;span&gt;&lt;span&gt;;;   (doom-themes :host github :repo &amp;quot;doomemacs&#x2F;themes&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;;;                :files (:defaults)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package doom-themes
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;(setq doom-themes-enable-bold t
&lt;&#x2F;span&gt;&lt;span&gt;      doom-themes-enable-italic t)
&lt;&#x2F;span&gt;&lt;span&gt;(load-theme &amp;#39;doom-one t))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;fonts&quot;&gt;FONTS&lt;&#x2F;h3&gt;
&lt;p&gt;Emacs er fonts change korar jonno font add korte hobe.&lt;&#x2F;p&gt;
&lt;p&gt;If you are having trouble of loading the fonts please add those line in your early-init.el file&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(add-to-list &amp;#39;default-frame-alist &amp;#39;(font . &amp;quot;JetBrains Mono-11&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(set-face-attribute &amp;#39;default nil :font &amp;quot;JetBrains Mono&amp;quot; :height 160 :weight &amp;#39;medium)
&lt;&#x2F;span&gt;&lt;span&gt;;; (set-face-attribute &amp;#39;variable-pitch nil :font &amp;quot;Ubuntu&amp;quot; :height 120 :weight &amp;#39;medium)
&lt;&#x2F;span&gt;&lt;span&gt;;; (set-face-attribute &amp;#39;fixed-pitch nil :font &amp;quot;JetBrains Mono&amp;quot; :height 120 :weight &amp;#39;medium)
&lt;&#x2F;span&gt;&lt;span&gt;;; (set-face-attribute &amp;#39;font-lock-comment-face nil :slant &amp;#39;italic)
&lt;&#x2F;span&gt;&lt;span&gt;;; (set-face-attribute &amp;#39;font-lock-keyword-face nil :slant &amp;#39;italic)
&lt;&#x2F;span&gt;&lt;span&gt;;; (setq-default line-spacing 0.12)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;org-mode&quot;&gt;ORG MODE&lt;&#x2F;h3&gt;
&lt;p&gt;Org mode er configuretion er jonno amader ay package abong variable o hook gula add korte hobe.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ORG MAIN&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package toc-org
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :commands toc-org-enable
&lt;&#x2F;span&gt;&lt;span&gt;  :init (add-hook &amp;#39;org-mode-hook &amp;#39;toc-org-enable))
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;org-mode-hook &amp;#39;org-indent-mode)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package org-bullets
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t)
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;org-mode-hook (lambda () (org-bullets-mode 1)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(require &amp;#39;org-tempo)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;ORG MODE GRAphical TWeaks&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(setq org-edit-src-content-indentation 0) ;; set src block automatic indent to 0 instead of 2.
&lt;&#x2F;span&gt;&lt;span&gt;(delete-selection-mode 1)    ;; you can select text and delete it by typing.
&lt;&#x2F;span&gt;&lt;span&gt;(electric-indent-mode -1)    ;; turn off the weird indenting that emacs does by default.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphical-user-interface-tweaks&quot;&gt;GRAPHICAL USER INTERFACE TWEAKS&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DEFAULT BIP SOUND DISABLE&lt;&#x2F;p&gt;
&lt;p&gt;Emacs a defult vabe akta beep sound kore jdi kno line er first a jeye backspace click kora hoi ba kno vhul command dea hoi j ta sunte onk besi osojjo lage ay jonno defult beep sound ta off kora dorkar.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package emacs
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure nil
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (setq ring-bell-function #&amp;#39;ignore))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Disable Menubar, Toolbars and Scrollbars&lt;&#x2F;p&gt;
&lt;p&gt;Minimul look er jonno menu-bar, scroll-bar abong tool-bar off kore dea.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(menu-bar-mode -1)           ;; Disable the menu bar 
&lt;&#x2F;span&gt;&lt;span&gt;(scroll-bar-mode -1)         ;; disable the scroll bar
&lt;&#x2F;span&gt;&lt;span&gt;(tool-bar-mode -1)           ;; Disable the tool bar
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Display Line Numbers and Truncated Lines&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(global-auto-revert-mode t)  ;; Automatically show changes if the file has changed
&lt;&#x2F;span&gt;&lt;span&gt;(global-visual-line-mode t)  ;; Enable truncated lines
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;DISPLAY LINE NUMBER MODE&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(global-display-line-numbers-mode 1) ;; Display line numbers
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;FOR PAIR MODE: LIKE(){}&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(electric-pair-mode 1)       ;; Turns on automatic parens pairing
&lt;&#x2F;span&gt;&lt;span&gt;;; The following prevents &amp;lt;&amp;gt; from auto-pairing when electric-pair-mode is on.
&lt;&#x2F;span&gt;&lt;span&gt;;; Otherwise, org-tempo is broken when you try to &amp;lt;s TAB...
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;org-mode-hook (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;                           (setq-local electric-pair-inhibit-predicate
&lt;&#x2F;span&gt;&lt;span&gt;                       `(lambda (c)
&lt;&#x2F;span&gt;&lt;span&gt;                      (if (char-equal c ?&amp;lt;) t (,electric-pair-inhibit-predicate c))))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;ZOOMING IN AND OUT&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;;========= ZOOMING IN AND OUT ==========
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;C-=&amp;quot;) &amp;#39;text-scale-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;C--&amp;quot;) &amp;#39;text-scale-decrease)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;C-wheel-up&amp;gt;&amp;quot;) &amp;#39;text-scale-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;C-wheel-down&amp;gt;&amp;quot;) &amp;#39;text-scale-decrease)
&lt;&#x2F;span&gt;&lt;span&gt;;;=========TRANSPARENT STARTUP==========
&lt;&#x2F;span&gt;&lt;span&gt;(setq inhibit-startup-message t)
&lt;&#x2F;span&gt;&lt;span&gt;(setq initial-scratch-message nil)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;minibuffer-escape&quot;&gt;MINIBUFFER ESCAPE&lt;&#x2F;h3&gt;
&lt;p&gt;jkhn minibuffer a focus jai tkhn minibuffer theke focus sorarnor jonno jhamela hoi onk bar esc press kora lage to ay problem ta solve korar jonno, one click a minibuffer theke escape korar jonno.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(global-set-key [escape] &amp;#39;keyboard-escape-quit);;MInibuffer escape
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;evil-mode&quot;&gt;EVIL MODE&lt;&#x2F;h3&gt;
&lt;p&gt;Vim like keybinding er jonno Evil Mode.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package evil
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :init
&lt;&#x2F;span&gt;&lt;span&gt;  (setq evil-want-integration t)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq evil-want-keybinding nil)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq evil-vsplit-window-right t)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq evil-split-window-below t)
&lt;&#x2F;span&gt;&lt;span&gt;  (evil-mode 1))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package evil-collection
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after evil
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (evil-collection-init))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package evil-tutor
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Using RETURN to follow links in Org&#x2F;Evil 
&lt;&#x2F;span&gt;&lt;span&gt;;; Unmap keys in &amp;#39;evil-maps if not done, (setq org-return-follows-link t) will not work
&lt;&#x2F;span&gt;&lt;span&gt;(with-eval-after-load &amp;#39;evil-maps
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key evil-motion-state-map (kbd &amp;quot;SPC&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key evil-motion-state-map (kbd &amp;quot;RET&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key evil-motion-state-map (kbd &amp;quot;TAB&amp;quot;) nil))
&lt;&#x2F;span&gt;&lt;span&gt;;; Setting RETURN key in org-mode to follow links
&lt;&#x2F;span&gt;&lt;span&gt;(setq org-return-follows-link  t)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;vterm&quot;&gt;VTERM&lt;&#x2F;h3&gt;
&lt;p&gt;Emacs er jonno best terminal emulator vterm setup korar jonno.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package vterm
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t)
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;vterm-mode-hook (lambda () (display-line-numbers-mode -1)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;counsel-and-ivy&quot;&gt;COUNSEL AND IVY&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package counsel
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after ivy
&lt;&#x2F;span&gt;&lt;span&gt;  :config (counsel-mode))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package ivy
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :bind
&lt;&#x2F;span&gt;&lt;span&gt;  ;; ivy-resume resumes the last Ivy-based completion.
&lt;&#x2F;span&gt;&lt;span&gt;  ((&amp;quot;C-c C-r&amp;quot; . ivy-resume)
&lt;&#x2F;span&gt;&lt;span&gt;   (&amp;quot;C-x B&amp;quot; . ivy-switch-buffer-other-window))
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (setq ivy-use-virtual-buffers t)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq ivy-count-format &amp;quot;(%d&#x2F;%d) &amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq enable-recursive-minibuffers t)
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (ivy-mode))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package all-the-icons-ivy-rich
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :init (all-the-icons-ivy-rich-mode 1))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package ivy-rich
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after ivy
&lt;&#x2F;span&gt;&lt;span&gt;  :init (ivy-rich-mode 1) ;; this gets us descriptions in M-x.
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (ivy-virtual-abbreviate &amp;#39;full
&lt;&#x2F;span&gt;&lt;span&gt;   ivy-rich-switch-buffer-align-virtual-buffer t
&lt;&#x2F;span&gt;&lt;span&gt;   ivy-rich-path-style &amp;#39;abbrev)
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (ivy-set-display-transformer &amp;#39;ivy-switch-buffer
&lt;&#x2F;span&gt;&lt;span&gt;                               &amp;#39;ivy-rich-switch-buffer-transformer))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;general-keybinding&quot;&gt;GENERAL KEYBINDING&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package general
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  ;; Define &amp;#39;SPC&amp;#39; as the global leader key
&lt;&#x2F;span&gt;&lt;span&gt;  (general-create-definer dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    :states &amp;#39;(normal insert visual emacs)
&lt;&#x2F;span&gt;&lt;span&gt;    :keymaps &amp;#39;override
&lt;&#x2F;span&gt;&lt;span&gt;    :prefix &amp;quot;SPC&amp;quot;  ;; Leader key
&lt;&#x2F;span&gt;&lt;span&gt;    :global-prefix &amp;quot;M-SPC&amp;quot;)  ;; Access leader in insert mode
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  ;; Define the keybindings
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;SPC&amp;quot; &amp;#39;(counsel-M-x :wk &amp;quot;Counsel M-x&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;.&amp;quot; &amp;#39;(find-file :wk &amp;quot;Find file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;=&amp;quot; &amp;#39;(perspective-map :wk &amp;quot;Perspective&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;TAB TAB&amp;quot; &amp;#39;(comment-line :wk &amp;quot;Comment lines&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;u&amp;quot; &amp;#39;(universal-argument :wk &amp;quot;Universal argument&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Bookmarks&#x2F;Buffers&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b b&amp;quot; &amp;#39;(switch-to-buffer :wk &amp;quot;Switch to buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    ;;&amp;quot;b B&amp;quot; &amp;#39;(exwm-workspace-switch-to-buffer :wk &amp;quot;Exwm buffer switch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b c&amp;quot; &amp;#39;(clone-indirect-buffer :wk &amp;quot;Create indirect buffer copy in a split&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b C&amp;quot; &amp;#39;(clone-indirect-buffer-other-window :wk &amp;quot;Clone indirect buffer in new window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b d&amp;quot; &amp;#39;(bookmark-delete :wk &amp;quot;Delete bookmark&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b i&amp;quot; &amp;#39;(ibuffer :wk &amp;quot;Ibuffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b k&amp;quot; &amp;#39;(kill-current-buffer :wk &amp;quot;Kill current buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b K&amp;quot; &amp;#39;(kill-some-buffers :wk &amp;quot;Kill multiple buffers&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b l&amp;quot; &amp;#39;(list-bookmarks :wk &amp;quot;List bookmarks&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b m&amp;quot; &amp;#39;(bookmark-set :wk &amp;quot;Set bookmark&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b n&amp;quot; &amp;#39;(next-buffer :wk &amp;quot;Next buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b p&amp;quot; &amp;#39;(previous-buffer :wk &amp;quot;Previous buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b r&amp;quot; &amp;#39;(revert-buffer :wk &amp;quot;Reload buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b R&amp;quot; &amp;#39;(rename-buffer :wk &amp;quot;Rename buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b s&amp;quot; &amp;#39;(basic-save-buffer :wk &amp;quot;Save buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b S&amp;quot; &amp;#39;(save-some-buffers :wk &amp;quot;Save multiple buffers&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;b w&amp;quot; &amp;#39;(bookmark-save :wk &amp;quot;Save current bookmarks to bookmark file&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;d&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Dired&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;d d&amp;quot; &amp;#39;(dired :wk &amp;quot;Open dired&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;d j&amp;quot; &amp;#39;(dired-jump :wk &amp;quot;Dired jump to current&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;d n&amp;quot; &amp;#39;(neotree-dir :wk &amp;quot;Open directory in neotree&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;d p&amp;quot; &amp;#39;(peep-dired :wk &amp;quot;Peep-dired&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Eshell&#x2F;Evaluate&amp;quot;)    
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e b&amp;quot; &amp;#39;(eval-buffer :wk &amp;quot;Evaluate elisp in buffer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e d&amp;quot; &amp;#39;(eval-defun :wk &amp;quot;Evaluate defun containing or after point&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e e&amp;quot; &amp;#39;(eval-expression :wk &amp;quot;Evaluate and elisp expression&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e h&amp;quot; &amp;#39;(counsel-esh-history :which-key &amp;quot;Eshell history&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e l&amp;quot; &amp;#39;(eval-last-sexp :wk &amp;quot;Evaluate elisp expression before point&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e r&amp;quot; &amp;#39;(eval-region :wk &amp;quot;Evaluate elisp in region&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e R&amp;quot; &amp;#39;(eww-reload :which-key &amp;quot;Reload current page in EWW&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e s&amp;quot; &amp;#39;(eshell :which-key &amp;quot;Eshell&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;e w&amp;quot; &amp;#39;(eww :which-key &amp;quot;EWW emacs web wowser&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Files&amp;quot;)    
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f c&amp;quot; &amp;#39;((lambda () (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;              (find-file &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;config.org&amp;quot;)) 
&lt;&#x2F;span&gt;&lt;span&gt;            :wk &amp;quot;Open emacs config.org&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f e&amp;quot; &amp;#39;((lambda () (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;              (dired &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;&amp;quot;)) 
&lt;&#x2F;span&gt;&lt;span&gt;            :wk &amp;quot;Open user-emacs-directory in dired&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f d&amp;quot; &amp;#39;(find-grep-dired :wk &amp;quot;Search for string in files in DIR&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f g&amp;quot; &amp;#39;(counsel-grep-or-swiper :wk &amp;quot;Search for string current file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f i&amp;quot; &amp;#39;((lambda () (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;              (find-file &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;init.el&amp;quot;)) 
&lt;&#x2F;span&gt;&lt;span&gt;            :wk &amp;quot;Open emacs init.el&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f j&amp;quot; &amp;#39;(counsel-file-jump :wk &amp;quot;Jump to a file below current directory&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f l&amp;quot; &amp;#39;(counsel-locate :wk &amp;quot;Locate a file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f r&amp;quot; &amp;#39;(counsel-recentf :wk &amp;quot;Find recent files&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f u&amp;quot; &amp;#39;(sudo-edit-find-file :wk &amp;quot;Sudo find file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;f U&amp;quot; &amp;#39;(sudo-edit :wk &amp;quot;Sudo edit file&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Git&amp;quot;)    
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g &#x2F;&amp;quot; &amp;#39;(magit-displatch :wk &amp;quot;Magit dispatch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g .&amp;quot; &amp;#39;(magit-file-displatch :wk &amp;quot;Magit file dispatch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g b&amp;quot; &amp;#39;(magit-branch-checkout :wk &amp;quot;Switch branch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g c&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Create&amp;quot;) 
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g c b&amp;quot; &amp;#39;(magit-branch-and-checkout :wk &amp;quot;Create branch and checkout&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g c c&amp;quot; &amp;#39;(magit-commit-create :wk &amp;quot;Create commit&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g c f&amp;quot; &amp;#39;(magit-commit-fixup :wk &amp;quot;Create fixup commit&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g C&amp;quot; &amp;#39;(magit-clone :wk &amp;quot;Clone repo&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g f&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Find&amp;quot;) 
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g f c&amp;quot; &amp;#39;(magit-show-commit :wk &amp;quot;Show commit&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g f f&amp;quot; &amp;#39;(magit-find-file :wk &amp;quot;Magit find file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g f g&amp;quot; &amp;#39;(magit-find-git-config-file :wk &amp;quot;Find gitconfig file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g F&amp;quot; &amp;#39;(magit-fetch :wk &amp;quot;Git fetch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g g&amp;quot; &amp;#39;(magit-status :wk &amp;quot;Magit status&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g i&amp;quot; &amp;#39;(magit-init :wk &amp;quot;Initialize git repo&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g l&amp;quot; &amp;#39;(magit-log-buffer-file :wk &amp;quot;Magit buffer log&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g r&amp;quot; &amp;#39;(vc-revert :wk &amp;quot;Git revert file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g s&amp;quot; &amp;#39;(magit-stage-file :wk &amp;quot;Git stage file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g t&amp;quot; &amp;#39;(git-timemachine :wk &amp;quot;Git time machine&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;g u&amp;quot; &amp;#39;(magit-stage-file :wk &amp;quot;Git unstage file&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Help&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h a&amp;quot; &amp;#39;(counsel-apropos :wk &amp;quot;Apropos&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h b&amp;quot; &amp;#39;(describe-bindings :wk &amp;quot;Describe bindings&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h c&amp;quot; &amp;#39;(describe-char :wk &amp;quot;Describe character under cursor&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Emacs documentation&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d a&amp;quot; &amp;#39;(about-emacs :wk &amp;quot;About Emacs&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d d&amp;quot; &amp;#39;(view-emacs-debugging :wk &amp;quot;View Emacs debugging&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d f&amp;quot; &amp;#39;(view-emacs-FAQ :wk &amp;quot;View Emacs FAQ&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d m&amp;quot; &amp;#39;(info-emacs-manual :wk &amp;quot;The Emacs manual&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d n&amp;quot; &amp;#39;(view-emacs-news :wk &amp;quot;View Emacs news&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d o&amp;quot; &amp;#39;(describe-distribution :wk &amp;quot;How to obtain Emacs&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d p&amp;quot; &amp;#39;(view-emacs-problems :wk &amp;quot;View Emacs problems&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d t&amp;quot; &amp;#39;(view-emacs-todo :wk &amp;quot;View Emacs todo&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h d w&amp;quot; &amp;#39;(describe-no-warranty :wk &amp;quot;Describe no warranty&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h e&amp;quot; &amp;#39;(view-echo-area-messages :wk &amp;quot;View echo area messages&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h f&amp;quot; &amp;#39;(describe-function :wk &amp;quot;Describe function&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h F&amp;quot; &amp;#39;(describe-face :wk &amp;quot;Describe face&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h g&amp;quot; &amp;#39;(describe-gnu-project :wk &amp;quot;Describe GNU Project&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h i&amp;quot; &amp;#39;(info :wk &amp;quot;Info&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h I&amp;quot; &amp;#39;(describe-input-method :wk &amp;quot;Describe input method&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h k&amp;quot; &amp;#39;(describe-key :wk &amp;quot;Describe key&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h l&amp;quot; &amp;#39;(view-lossage :wk &amp;quot;Display recent keystrokes and the commands run&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h L&amp;quot; &amp;#39;(describe-language-environment :wk &amp;quot;Describe language environment&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h m&amp;quot; &amp;#39;(describe-mode :wk &amp;quot;Describe mode&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h r&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Reload&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h r r&amp;quot; &amp;#39;((lambda () (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;                (load-file &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;init.el&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                (ignore (elpaca-process-queues)))
&lt;&#x2F;span&gt;&lt;span&gt;              :wk &amp;quot;Reload emacs config&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h t&amp;quot; &amp;#39;(load-theme :wk &amp;quot;Load theme&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h v&amp;quot; &amp;#39;(describe-variable :wk &amp;quot;Describe variable&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h w&amp;quot; &amp;#39;(where-is :wk &amp;quot;Prints keybinding for command if set&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;h x&amp;quot; &amp;#39;(describe-command :wk &amp;quot;Display full documentation for command&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Org&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m a&amp;quot; &amp;#39;(org-agenda :wk &amp;quot;Org agenda&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m e&amp;quot; &amp;#39;(org-export-dispatch :wk &amp;quot;Org export dispatch&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m i&amp;quot; &amp;#39;(org-toggle-item :wk &amp;quot;Org toggle item&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m t&amp;quot; &amp;#39;(org-todo :wk &amp;quot;Org todo&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m B&amp;quot; &amp;#39;(org-babel-tangle :wk &amp;quot;Org babel tangle&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m T&amp;quot; &amp;#39;(org-todo-list :wk &amp;quot;Org todo list&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m b&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Tables&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m b -&amp;quot; &amp;#39;(org-table-insert-hline :wk &amp;quot;Insert hline in table&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m d&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Date&#x2F;deadline&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;m d t&amp;quot; &amp;#39;(org-time-stamp :wk &amp;quot;Org time stamp&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;o&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Open&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;o d&amp;quot; &amp;#39;(dashboard-open :wk &amp;quot;Dashboard&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;o e&amp;quot; &amp;#39;(elfeed :wk &amp;quot;Elfeed RSS&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;o f&amp;quot; &amp;#39;(make-frame :wk &amp;quot;Open buffer in new frame&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;o F&amp;quot; &amp;#39;(select-frame-by-name :wk &amp;quot;Select frame by name&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  ;; projectile-command-map already has a ton of bindings 
&lt;&#x2F;span&gt;&lt;span&gt;  ;; set for us, so no need to specify each individually.
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;p&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Programing&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;p c&amp;quot; &amp;#39;(compile :wk &amp;quot;Compile&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;p f&amp;quot; &amp;#39;(flutter-run-or-hot-reload :wk &amp;quot;Flutter App Run&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;s&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Search&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;s d&amp;quot; &amp;#39;(dictionary-search :wk &amp;quot;Search dictionary&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;s m&amp;quot; &amp;#39;(man :wk &amp;quot;Man pages&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;s t&amp;quot; &amp;#39;(tldr :wk &amp;quot;Lookup TLDR docs for a command&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;s w&amp;quot; &amp;#39;(woman :wk &amp;quot;Similar to man but doesn&amp;#39;t require man&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Toggle&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t e&amp;quot; &amp;#39;(eshell-toggle :wk &amp;quot;Toggle eshell&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t f&amp;quot; &amp;#39;(flycheck-mode :wk &amp;quot;Toggle flycheck&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t l&amp;quot; &amp;#39;(display-line-numbers-mode :wk &amp;quot;Toggle line numbers&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t n&amp;quot; &amp;#39;(neotree-toggle :wk &amp;quot;Toggle neotree file viewer&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t o&amp;quot; &amp;#39;(org-mode :wk &amp;quot;Toggle org mode&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t r&amp;quot; &amp;#39;(rainbow-mode :wk &amp;quot;Toggle rainbow mode&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t t&amp;quot; &amp;#39;(visual-line-mode :wk &amp;quot;Toggle truncated lines&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t d&amp;quot; &amp;#39;(counsel-linux-app :wk &amp;quot;Open application&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;t v&amp;quot; &amp;#39;(vterm-toggle :wk &amp;quot;Toggle vterm&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w&amp;quot; &amp;#39;(:ignore t :wk &amp;quot;Windows&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Window splits
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w c&amp;quot; &amp;#39;(evil-window-delete :wk &amp;quot;Close window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w n&amp;quot; &amp;#39;(evil-window-new :wk &amp;quot;New window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w s&amp;quot; &amp;#39;(evil-window-split :wk &amp;quot;Horizontal split window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w v&amp;quot; &amp;#39;(evil-window-vsplit :wk &amp;quot;Vertical split window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Window motions
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w h&amp;quot; &amp;#39;(evil-window-left :wk &amp;quot;Window left&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w j&amp;quot; &amp;#39;(evil-window-down :wk &amp;quot;Window down&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w k&amp;quot; &amp;#39;(evil-window-up :wk &amp;quot;Window up&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w l&amp;quot; &amp;#39;(evil-window-right :wk &amp;quot;Window right&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w w&amp;quot; &amp;#39;(evil-window-next :wk &amp;quot;Goto next window&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Move Windows
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w H&amp;quot; &amp;#39;(buf-move-left :wk &amp;quot;Buffer move left&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w J&amp;quot; &amp;#39;(buf-move-down :wk &amp;quot;Buffer move down&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w K&amp;quot; &amp;#39;(buf-move-up :wk &amp;quot;Buffer move up&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;w L&amp;quot; &amp;#39;(buf-move-right :wk &amp;quot;Buffer move right&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;sudo-edit&quot;&gt;SUDO EDIT&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package sudo-edit
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;    (dt&#x2F;leader-keys
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;fu&amp;quot; &amp;#39;(sudo-edit-find-file :wk &amp;quot;Sudo find file&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;fU&amp;quot; &amp;#39;(sudo-edit :wk &amp;quot;Sudo edit file&amp;quot;)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;emacs-keybinding&quot;&gt;EMACS KEYBINDING&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Bookmarks and Buffers keybindings
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b&amp;quot;) nil)  ;; Start defining a prefix for M-b
&lt;&#x2F;span&gt;&lt;span&gt;;;(define-key global-map (kbd &amp;quot;M-b b&amp;quot;) &amp;#39;switch-to-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b i&amp;quot;) &amp;#39;exwm-workspace-switch-to-buffer) ;; Uncomment if needed
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b w&amp;quot;) &amp;#39;exwm-workspace-switch)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b c&amp;quot;) &amp;#39;clone-indirect-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b C&amp;quot;) &amp;#39;clone-indirect-buffer-other-window)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b d&amp;quot;) &amp;#39;bookmark-delete)
&lt;&#x2F;span&gt;&lt;span&gt;;;(define-key global-map (kbd &amp;quot;M-b i&amp;quot;) &amp;#39;ibuffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b k&amp;quot;) &amp;#39;kill-buffer-and-window)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b K&amp;quot;) &amp;#39;kill-some-buffers)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b l&amp;quot;) &amp;#39;list-bookmarks)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b m&amp;quot;) &amp;#39;bookmark-set)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b n&amp;quot;) &amp;#39;next-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b p&amp;quot;) &amp;#39;previous-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b r&amp;quot;) &amp;#39;revert-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b R&amp;quot;) &amp;#39;rename-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b s&amp;quot;) &amp;#39;basic-save-buffer)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-b S&amp;quot;) &amp;#39;save-some-buffers)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Define M-w as a prefix key for WINDOWS
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w&amp;quot;) nil)  ;; Start defining a prefix for s-w
&lt;&#x2F;span&gt;&lt;span&gt;;; Window management keybindings
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w c&amp;quot;) &amp;#39;evil-window-delete)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w n&amp;quot;) &amp;#39;evil-window-new)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w s&amp;quot;) &amp;#39;evil-window-split)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w v&amp;quot;) &amp;#39;evil-window-vsplit)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Window motions
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w h&amp;quot;) &amp;#39;evil-window-left)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w j&amp;quot;) &amp;#39;evil-window-down)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w k&amp;quot;) &amp;#39;evil-window-up)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w l&amp;quot;) &amp;#39;evil-window-right)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w w&amp;quot;) &amp;#39;evil-window-next)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w m&amp;quot;) &amp;#39;save-buffers-kill-emacs)
&lt;&#x2F;span&gt;&lt;span&gt;;; Move windows
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w H&amp;quot;) &amp;#39;buf-move-left)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w J&amp;quot;) &amp;#39;buf-move-down)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w K&amp;quot;) &amp;#39;buf-move-up)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-w L&amp;quot;) &amp;#39;buf-move-right)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Define M-d as a prefix key in global-map
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Dired keybindings under M-d
&lt;&#x2F;span&gt;&lt;span&gt;;; (define-key global-map (kbd &amp;quot;M-d D&amp;quot;) &amp;#39;dired) ;; Open Dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d D&amp;quot;) &amp;#39;counsel-linux-app) ;; Open Dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d d&amp;quot;) &amp;#39;app-launcher-run-app) 
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d j&amp;quot;) &amp;#39;dired-jump) ;; Jump to current directory in Dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d n&amp;quot;) &amp;#39;neotree-dir) ;; Open directory in Neotree
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d p&amp;quot;) &amp;#39;peep-dired) ;; Peep Dired preview
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-d x&amp;quot;) &amp;#39;kill-emacs) ;; Kill emacs
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-m&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-m m&amp;quot;) #&amp;#39;ORG-TO-MD-CONVERT)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-m l&amp;quot;) #&amp;#39;Lock-screen)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-m L&amp;quot;) #&amp;#39;Update-lockscreen-bg)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key global-map (kbd &amp;quot;M-m s&amp;quot;) #&amp;#39;Update-sddm-wallpaper)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;which-key&quot;&gt;WHICH KEY&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package which-key
&lt;&#x2F;span&gt;&lt;span&gt;:ensure t
&lt;&#x2F;span&gt;&lt;span&gt;:init
&lt;&#x2F;span&gt;&lt;span&gt;  (which-key-mode 1)
&lt;&#x2F;span&gt;&lt;span&gt;:config
&lt;&#x2F;span&gt;&lt;span&gt;(setq which-key-side-window-location &amp;#39;bottom
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-sort-order #&amp;#39;which-key-key-order-alpha
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-sort-uppercase-first nil
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-add-column-padding 1
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-max-display-columns nil
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-min-display-lines 6
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-side-window-slot -10
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-side-window-max-height 0.25
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-idle-delay 0.8
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-max-description-length 25
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-allow-imprecise-window-fit nil
&lt;&#x2F;span&gt;&lt;span&gt;        which-key-separator &amp;quot; → &amp;quot; ))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;blank-buffer&quot;&gt;BLANK BUFFER&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; create a completely blank buffer
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;blank-buffer ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;create a new completely blank buffer with no ui elements.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let ((buf (get-buffer-create &amp;quot;*blank*&amp;quot;))) ;; get or create (prevent duplicate)
&lt;&#x2F;span&gt;&lt;span&gt;    (switch-to-buffer buf)
&lt;&#x2F;span&gt;&lt;span&gt;    (fundamental-mode)
&lt;&#x2F;span&gt;&lt;span&gt;    (setq-local mode-line-format nil)
&lt;&#x2F;span&gt;&lt;span&gt;    (setq-local header-line-format nil)
&lt;&#x2F;span&gt;&lt;span&gt;    (setq-local cursor-type nil) ;; use nil instead of -1
&lt;&#x2F;span&gt;&lt;span&gt;    (setq-local display-line-numbers-mode -1)
&lt;&#x2F;span&gt;&lt;span&gt;    (buffer-disable-undo)
&lt;&#x2F;span&gt;&lt;span&gt;    (read-only-mode -1)
&lt;&#x2F;span&gt;&lt;span&gt;    (blink-cursor-mode 0)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Hide fringes
&lt;&#x2F;span&gt;&lt;span&gt;    (set-window-fringes (get-buffer-window buf) 0 0)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Clear message area
&lt;&#x2F;span&gt;&lt;span&gt;    (message nil)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;transperency&quot;&gt;TRANSPERENCY&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; START picom for transparency
&lt;&#x2F;span&gt;&lt;span&gt;(start-process &amp;quot;picom&amp;quot; nil &amp;quot;picom&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;; TRANSPARENCY LOGIC BASED ON BUFFER NAME
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;update-transparency-based-on-buffer ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Set transparency to 0 if in *blank*, else back to default.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (if (string= (buffer-name) &amp;quot;*blank*&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; If it&amp;#39;s blank buffer: fully transparent
&lt;&#x2F;span&gt;&lt;span&gt;      (progn
&lt;&#x2F;span&gt;&lt;span&gt;        (set-frame-parameter (selected-frame) &amp;#39;alpha-background 0)
&lt;&#x2F;span&gt;&lt;span&gt;        (set-frame-parameter (selected-frame) &amp;#39;alpha &amp;#39;(0 . 0)))
&lt;&#x2F;span&gt;&lt;span&gt;    ;; For all other buffers: semi-transparent
&lt;&#x2F;span&gt;&lt;span&gt;    (progn
&lt;&#x2F;span&gt;&lt;span&gt;      (set-frame-parameter (selected-frame) &amp;#39;alpha-background 90)
&lt;&#x2F;span&gt;&lt;span&gt;      (set-frame-parameter (selected-frame) &amp;#39;alpha &amp;#39;(90 . 90)))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Update transparency whenever buffer changes
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;buffer-list-update-hook #&amp;#39;my&#x2F;update-transparency-based-on-buffer)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;transperency-for-exwm-workspace&quot;&gt;TRANSPERENCY FOR EXWM WORKSPACE&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;;; ONLY OPEN *blank* ON STARTUP IF EXWM WORKSPACE 0
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;blank-buffer-in-first-workspace-only ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Open blank buffer only in EXWM workspace 0.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (when (and (featurep &amp;#39;exwm)
&lt;&#x2F;span&gt;&lt;span&gt;             (eq exwm-workspace-current-index 0)
&lt;&#x2F;span&gt;&lt;span&gt;             (not (get-buffer &amp;quot;*blank*&amp;quot;))) ;; only if it doesn&amp;#39;t exist yet
&lt;&#x2F;span&gt;&lt;span&gt;    (my&#x2F;blank-buffer)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;emacs-startup-hook #&amp;#39;my&#x2F;blank-buffer-in-first-workspace-only)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;; WHEN SWITCHING EXWM WORKSPACES, SHOW *blank* IF NOTHING ELSE
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;show-blank-if-no-buffer ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Show *blank* buffer if current buffer is *scratch* or unnamed.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (let ((curr (buffer-name)))
&lt;&#x2F;span&gt;&lt;span&gt;    (when (or (string= curr &amp;quot;*scratch*&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;              (string= curr &amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;              (string-match-p &amp;quot;^\\*.*\\*$&amp;quot; curr)) ;; if it&amp;#39;s just *Messages*, *Help*, etc.
&lt;&#x2F;span&gt;&lt;span&gt;      (unless (get-buffer &amp;quot;*blank*&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (my&#x2F;blank-buffer))
&lt;&#x2F;span&gt;&lt;span&gt;      (switch-to-buffer &amp;quot;*blank*&amp;quot;))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;exwm-workspace-switch-hook #&amp;#39;my&#x2F;show-blank-if-no-buffer)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;mouse-battery-and-background-setup&quot;&gt;MOUSE, BATTERY AND BACKGROUND SETUP&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(setq mouse-autoselect-window t
&lt;&#x2F;span&gt;&lt;span&gt;      focus-follows-mouse t)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(display-time-mode 1)
&lt;&#x2F;span&gt;&lt;span&gt;(setq display-time-format &amp;quot;%H:%M:%S&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;(display-battery-mode 1)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;exwm-init-hook
&lt;&#x2F;span&gt;&lt;span&gt;          (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;            (run-at-time &amp;quot;1 sec&amp;quot; nil (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;              (start-process &amp;quot;nitrogen&amp;quot; nil &amp;quot;nitrogen&amp;quot; &amp;quot;--restore&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;            (run-at-time &amp;quot;3 sec&amp;quot; nil (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;              (start-process &amp;quot;nm-applet&amp;quot; nil &amp;quot;nm-applet&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;            (run-at-time &amp;quot;3 sec&amp;quot; nil (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;              (start-process &amp;quot;flameshot&amp;quot; nil &amp;quot;flameshot&amp;quot;)))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;ide&quot;&gt;IDE&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; ========== Neotree Mode ==========
&lt;&#x2F;span&gt;&lt;span&gt;(use-package neotree
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t)
&lt;&#x2F;span&gt;&lt;span&gt;;; ========== Company Mode ==========
&lt;&#x2F;span&gt;&lt;span&gt;(use-package company
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :diminish
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (prog-mode . company-mode)
&lt;&#x2F;span&gt;&lt;span&gt;  :bind (:map company-active-map
&lt;&#x2F;span&gt;&lt;span&gt;              (&amp;quot;&amp;lt;tab&amp;gt;&amp;quot; . company-complete-selection))
&lt;&#x2F;span&gt;&lt;span&gt;  :init (global-company-mode)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (company-minimum-prefix-length 2)
&lt;&#x2F;span&gt;&lt;span&gt;  (company-idle-delay 0.0)
&lt;&#x2F;span&gt;&lt;span&gt;  (company-show-numbers t)
&lt;&#x2F;span&gt;&lt;span&gt;  (company-tooltip-align-annotations t))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ========== Flycheck Mode ==========
&lt;&#x2F;span&gt;&lt;span&gt;(use-package flycheck
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :defer t
&lt;&#x2F;span&gt;&lt;span&gt;  :diminish
&lt;&#x2F;span&gt;&lt;span&gt;  :init (global-flycheck-mode))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ========== LSP Mode ==========
&lt;&#x2F;span&gt;&lt;span&gt;(use-package lsp-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :commands lsp
&lt;&#x2F;span&gt;&lt;span&gt;  :hook ((python-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (dart-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (c-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (c++-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (js-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (typescript-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (go-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;         (rust-mode . lsp))
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-pyright-typechecking-mode &amp;quot;basic&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-enable-symbol-highlighting t)
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-prefer-flymake nil))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;language-support-for-ide&quot;&gt;LANGUAGE SUPPORT FOR IDE&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PYTHON&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package python-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (python-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (python-shell-interpreter &amp;quot;python3&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package lsp-pyright
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after lsp-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (python-mode . (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;                         (require &amp;#39;lsp-pyright)
&lt;&#x2F;span&gt;&lt;span&gt;                         (lsp))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;DART MODE&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Dart + Flutter setup
&lt;&#x2F;span&gt;&lt;span&gt;(use-package dart-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (dart-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (dart-format-on-save t))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package lsp-dart
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after dart-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (dart-mode . lsp)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-dart-flutter-widget-guides t)
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-dart-sdk-dir &amp;quot;&#x2F;home&#x2F;aresr&#x2F;flutter&#x2F;bin&#x2F;cache&#x2F;dart-sdk&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp-dart-flutter-sdk-dir &amp;quot;&#x2F;home&#x2F;aresr&#x2F;flutter&#x2F;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;(use-package flutter
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after dart-mode
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (flutter-sdk-path &amp;quot;&#x2F;home&#x2F;aresr&#x2F;flutter&amp;quot;) ;; change this to your flutter path
&lt;&#x2F;span&gt;&lt;span&gt;  :bind (:map dart-mode-map
&lt;&#x2F;span&gt;&lt;span&gt;              (&amp;quot;C-M-x&amp;quot; . flutter-run-or-hot-reload)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dashboard&quot;&gt;DASHBOARD&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package dashboard
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :init
&lt;&#x2F;span&gt;&lt;span&gt;  ;; (setq initial-buffer-choice &amp;#39;dashboard-open)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq dashboard-set-heading-icons t)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq dashboard-set-file-icons t)
&lt;&#x2F;span&gt;&lt;span&gt;  (setq dashboard-banner-logo-title &amp;quot;NOTHING IS HERE&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;  ;;(setq dashboard-startup-banner &amp;#39;logo) ;; use standard emacs logo as banner
&lt;&#x2F;span&gt;&lt;span&gt;  (setq dashboard-startup-banner &amp;quot;&#x2F;home&#x2F;nothing&#x2F;Pictures&#x2F;555.png&amp;quot;))  ;; use custom image as banner
&lt;&#x2F;span&gt;&lt;span&gt;;;   (setq dashboard-center-content nil) ;; set to &amp;#39;t&amp;#39; for centered content
&lt;&#x2F;span&gt;&lt;span&gt;;;   (setq dashboard-items &amp;#39;((recents . 5)
&lt;&#x2F;span&gt;&lt;span&gt;;;                           (agenda . 5 )
&lt;&#x2F;span&gt;&lt;span&gt;;;                           (bookmarks . 3)
&lt;&#x2F;span&gt;&lt;span&gt;;;                           (projects . 3)
&lt;&#x2F;span&gt;&lt;span&gt;;;                           (registers . 3)))
&lt;&#x2F;span&gt;&lt;span&gt;;; :custom
&lt;&#x2F;span&gt;&lt;span&gt;;; (dashboard-modify-heading-icons &amp;#39;((recents . &amp;quot;file-text&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;;;                                   (bookmarks . &amp;quot;book&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;;; :config
&lt;&#x2F;span&gt;&lt;span&gt;;; (dashboard-setup-startup-hook))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dired&quot;&gt;DIRED&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(use-package dired-open
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (setq dired-open-extensions &amp;#39;((&amp;quot;gif&amp;quot; . &amp;quot;loupe&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;jpg&amp;quot; . &amp;quot;loupe&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;jpeg&amp;quot; . &amp;quot;loupe&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;pdf&amp;quot; . &amp;quot;okular&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;png&amp;quot; . &amp;quot;loupe&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;mkv&amp;quot; . &amp;quot;vlc&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                                (&amp;quot;mp4&amp;quot; . &amp;quot;vlc&amp;quot;))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(use-package peep-dired
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure t
&lt;&#x2F;span&gt;&lt;span&gt;  :after dired
&lt;&#x2F;span&gt;&lt;span&gt;  :hook (evil-normalize-keymaps . peep-dired-hook)
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;    (evil-define-key &amp;#39;normal dired-mode-map (kbd &amp;quot;h&amp;quot;) &amp;#39;dired-up-directory)
&lt;&#x2F;span&gt;&lt;span&gt;    (evil-define-key &amp;#39;normal dired-mode-map (kbd &amp;quot;l&amp;quot;) &amp;#39;dired-open-file) ; use dired-find-file instead if not using dired-open package
&lt;&#x2F;span&gt;&lt;span&gt;    (evil-define-key &amp;#39;normal peep-dired-mode-map (kbd &amp;quot;j&amp;quot;) &amp;#39;peep-dired-next-file)
&lt;&#x2F;span&gt;&lt;span&gt;    (evil-define-key &amp;#39;normal peep-dired-mode-map (kbd &amp;quot;k&amp;quot;) &amp;#39;peep-dired-prev-file)
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(setq dired-listing-switches &amp;quot;-lha&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;backups&quot;&gt;BACKUPS&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(setq backup-directory-alist &amp;#39;((&amp;quot;.*&amp;quot; . &amp;quot;~&#x2F;.local&#x2F;share&#x2F;Trash&#x2F;files&amp;quot;)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;buffer-move&quot;&gt;BUFFER MOVE&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;windmove)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;;###autoload
&lt;&#x2F;span&gt;&lt;span&gt;(defun buf-move-up ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Swap the current buffer and the buffer above the split.
&lt;&#x2F;span&gt;&lt;span&gt;If there is no split, ie now window above the current one, an
&lt;&#x2F;span&gt;&lt;span&gt;error is signaled.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;;;  &amp;quot;Switches between the current buffer, and the buffer above the
&lt;&#x2F;span&gt;&lt;span&gt;;;  split, if possible.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((other-win (windmove-find-other-window &amp;#39;up))
&lt;&#x2F;span&gt;&lt;span&gt;         (buf-this-buf (window-buffer (selected-window))))
&lt;&#x2F;span&gt;&lt;span&gt;    (if (null other-win)
&lt;&#x2F;span&gt;&lt;span&gt;        (error &amp;quot;No window above this one&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; swap top with this one
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer (selected-window) (window-buffer other-win))
&lt;&#x2F;span&gt;&lt;span&gt;      ;; move this one to top
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer other-win buf-this-buf)
&lt;&#x2F;span&gt;&lt;span&gt;      (select-window other-win))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;;###autoload
&lt;&#x2F;span&gt;&lt;span&gt;(defun buf-move-down ()
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;Swap the current buffer and the buffer under the split.
&lt;&#x2F;span&gt;&lt;span&gt;If there is no split, ie now window under the current one, an
&lt;&#x2F;span&gt;&lt;span&gt;error is signaled.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((other-win (windmove-find-other-window &amp;#39;down))
&lt;&#x2F;span&gt;&lt;span&gt;         (buf-this-buf (window-buffer (selected-window))))
&lt;&#x2F;span&gt;&lt;span&gt;    (if (or (null other-win) 
&lt;&#x2F;span&gt;&lt;span&gt;            (string-match &amp;quot;^ \\*Minibuf&amp;quot; (buffer-name (window-buffer other-win))))
&lt;&#x2F;span&gt;&lt;span&gt;        (error &amp;quot;No window under this one&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; swap top with this one
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer (selected-window) (window-buffer other-win))
&lt;&#x2F;span&gt;&lt;span&gt;      ;; move this one to top
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer other-win buf-this-buf)
&lt;&#x2F;span&gt;&lt;span&gt;      (select-window other-win))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;;###autoload
&lt;&#x2F;span&gt;&lt;span&gt;(defun buf-move-left ()
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;Swap the current buffer and the buffer on the left of the split.
&lt;&#x2F;span&gt;&lt;span&gt;If there is no split, ie now window on the left of the current
&lt;&#x2F;span&gt;&lt;span&gt;one, an error is signaled.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((other-win (windmove-find-other-window &amp;#39;left))
&lt;&#x2F;span&gt;&lt;span&gt;         (buf-this-buf (window-buffer (selected-window))))
&lt;&#x2F;span&gt;&lt;span&gt;    (if (null other-win)
&lt;&#x2F;span&gt;&lt;span&gt;        (error &amp;quot;No left split&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; swap top with this one
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer (selected-window) (window-buffer other-win))
&lt;&#x2F;span&gt;&lt;span&gt;      ;; move this one to top
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer other-win buf-this-buf)
&lt;&#x2F;span&gt;&lt;span&gt;      (select-window other-win))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;;###autoload
&lt;&#x2F;span&gt;&lt;span&gt;(defun buf-move-right ()
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;Swap the current buffer and the buffer on the right of the split.
&lt;&#x2F;span&gt;&lt;span&gt;If there is no split, ie now window on the right of the current
&lt;&#x2F;span&gt;&lt;span&gt;one, an error is signaled.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((other-win (windmove-find-other-window &amp;#39;right))
&lt;&#x2F;span&gt;&lt;span&gt;         (buf-this-buf (window-buffer (selected-window))))
&lt;&#x2F;span&gt;&lt;span&gt;    (if (null other-win)
&lt;&#x2F;span&gt;&lt;span&gt;        (error &amp;quot;No right split&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; swap top with this one
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer (selected-window) (window-buffer other-win))
&lt;&#x2F;span&gt;&lt;span&gt;      ;; move this one to top
&lt;&#x2F;span&gt;&lt;span&gt;      (set-window-buffer other-win buf-this-buf)
&lt;&#x2F;span&gt;&lt;span&gt;      (select-window other-win))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;setting-up-exwm&quot;&gt;SETTING UP EXWM&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;exwm-main&quot;&gt;EXWM MAIN&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;exwm)
&lt;&#x2F;span&gt;&lt;span&gt;;; Set the initial workspace number.
&lt;&#x2F;span&gt;&lt;span&gt;(setq exwm-workspace-number 10)
&lt;&#x2F;span&gt;&lt;span&gt;;;&#x2F; Make class name the buffer name.
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;exwm-update-class-hook
&lt;&#x2F;span&gt;&lt;span&gt;          (lambda () (exwm-workspace-rename-buffer exwm-class-name)))
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;exwm-init-hook
&lt;&#x2F;span&gt;&lt;span&gt;          (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;            (exwm-workspace-switch 1)))  ;; Auto switch to workspace 1
&lt;&#x2F;span&gt;&lt;span&gt;;; Global keybindings.
&lt;&#x2F;span&gt;&lt;span&gt;(setq exwm-input-global-keys
&lt;&#x2F;span&gt;&lt;span&gt;      `(([?\M-r] . exwm-reset) ;; s-r: Reset (to line-mode).
&lt;&#x2F;span&gt;&lt;span&gt;        ([?\M-n] . exwm-workspace-switch) ;; s-w: Switch workspace.
&lt;&#x2F;span&gt;&lt;span&gt;        ([?\M-k] . kill-buffer-and-window)
&lt;&#x2F;span&gt;&lt;span&gt;        ([?\M-&amp;amp;] . (lambda (cmd) ;; s-&amp;amp;: Launch application.
&lt;&#x2F;span&gt;&lt;span&gt;                     (interactive (list (read-shell-command &amp;quot;$ &amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;                     (start-process-shell-command cmd nil cmd)))
&lt;&#x2F;span&gt;&lt;span&gt;        ;; s-N: Switch to certain workspace.
&lt;&#x2F;span&gt;&lt;span&gt;        ,@(mapcar (lambda (i)
&lt;&#x2F;span&gt;&lt;span&gt;                    `(,(kbd (format &amp;quot;M-%d&amp;quot; i)) .
&lt;&#x2F;span&gt;&lt;span&gt;                      (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;                        (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;                        (exwm-workspace-switch-create ,i))))
&lt;&#x2F;span&gt;&lt;span&gt;                  (number-sequence 0 9))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; For copy like normal keybinding C-c
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map [?\C-q] &amp;#39;exwm-input-send-next-key)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Enable EXWM
&lt;&#x2F;span&gt;&lt;span&gt;(exwm-enable)
&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;exwm-manage-finish-hook
&lt;&#x2F;span&gt;&lt;span&gt;          (lambda ()
&lt;&#x2F;span&gt;&lt;span&gt;            (when (and exwm-class-name
&lt;&#x2F;span&gt;&lt;span&gt;                       (string= exwm-class-name &amp;quot;Firefox&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;              (exwm-input-set-local-simulation-keys nil))))
&lt;&#x2F;span&gt;&lt;span&gt;(require &amp;#39;exwm-systemtray)
&lt;&#x2F;span&gt;&lt;span&gt;(exwm-systemtray-mode 1)
&lt;&#x2F;span&gt;&lt;span&gt;(require &amp;#39;exwm-randr)
&lt;&#x2F;span&gt;&lt;span&gt;(exwm-randr-mode 1)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-display&quot;&gt;EXWM DISPLAY&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(setq X11_SCREEN_LIST &amp;#39;(&amp;quot;eDP-1&amp;quot; &amp;quot;DP-3&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; xrandr --mode for each screen in X11_SCREEN_LIST
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_MODE_LIST &amp;#39;(&amp;quot;1680x1050&amp;quot; &amp;quot;3840x1600&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; xrandr --rate for each screen in X11_SCREEN_LIST
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_RATE_LIST &amp;#39;(&amp;quot;59.95&amp;quot; &amp;quot;59.99&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; How screens are arranged from left to right. Vertical order, and &amp;quot;--same-as&amp;quot; not yet implemented.
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_ORDER_LIST &amp;#39;(&amp;quot;DP-3&amp;quot; &amp;quot;eDP-1&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; X11 screens (graphics outputs) that should always be explicitly turned off, if available.
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_DISABLED_LIST &amp;#39;(&amp;quot;DP-2&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Primary X11 screen, if available
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_PREFERRED &amp;quot;DP-3&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;;; (setq X11_SCREEN_PREFERRED &amp;quot;eDP-1&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; If X11_SCREEN_USE_ALL_AVAILABLE=&amp;quot;yes&amp;quot; then use all available screens in X11_SCREEN_LIST:
&lt;&#x2F;span&gt;&lt;span&gt;;; - X11_SCREEN_PREFERRED is primary, if available
&lt;&#x2F;span&gt;&lt;span&gt;;; - If X11_SCREEN_PREFERRED is unavailable, primary is first available screen in X11_SCREEN_LIST.
&lt;&#x2F;span&gt;&lt;span&gt;;; Otherwise use only one:
&lt;&#x2F;span&gt;&lt;span&gt;;; - X11_SCREEN_PREFERRED if available
&lt;&#x2F;span&gt;&lt;span&gt;;; - If X11_SCREEN_PREFERRED is unavailable then use first available screen in X11_SCREEN_LIST.
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_SCREEN_USE_ALL_AVAILABLE t)
&lt;&#x2F;span&gt;&lt;span&gt;;; (setq X11_SCREEN_USE_ALL_AVAILABLE nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Argument value for &amp;quot;xrandr --dpi&amp;quot;, i.e. Dots Per Inch. This is for the X11 DISPLAY, i.e. used for all screens.
&lt;&#x2F;span&gt;&lt;span&gt;(setq X11_DISPLAY_DPI 106)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; List of pairs &amp;quot;workspace-number screen&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;;; Used to construct exwm-randr-workspace-monitor-plist in emacs.
&lt;&#x2F;span&gt;&lt;span&gt;;; If a screen in this list is unavailable, the workspace will be mapped to the primary screen.
&lt;&#x2F;span&gt;&lt;span&gt;(setq EXWM_WORKSPACE_LIST &amp;#39;((1 . &amp;quot;eDP-1&amp;quot;) (3 . &amp;quot;eDP-1&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;;; (setq EXWM_WORKSPACE_LIST &amp;#39;((1 . &amp;quot;DP-3&amp;quot;) (3 . &amp;quot;DP-3&amp;quot;)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-font-settings&quot;&gt;EXWM FONT SETTINGS&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun my&#x2F;apply-font-settings (frame)
&lt;&#x2F;span&gt;&lt;span&gt;  (with-selected-frame frame
&lt;&#x2F;span&gt;&lt;span&gt;    (set-face-attribute &amp;#39;default nil :font &amp;quot;JetBrains Mono&amp;quot; :height 160  :weight &amp;#39;medium)))
&lt;&#x2F;span&gt;&lt;span&gt;    ;; (set-face-attribute &amp;#39;variable-pitch nil :font &amp;quot;Ubuntu&amp;quot; :height 100 :weight &amp;#39;medium)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; (set-face-attribute &amp;#39;fixed-pitch nil :font &amp;quot;JetBrains Mono&amp;quot; :height 100 :weight &amp;#39;medium)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; (set-face-attribute &amp;#39;font-lock-comment-face nil :slant &amp;#39;italic)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; (set-face-attribute &amp;#39;font-lock-keyword-face nil :slant &amp;#39;italic)
&lt;&#x2F;span&gt;&lt;span&gt;    ;; (setq-default line-spacing 0.12)))
&lt;&#x2F;span&gt;&lt;span&gt;(add-hook &amp;#39;after-make-frame-functions #&amp;#39;my&#x2F;apply-font-settings)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-extra-setting&quot;&gt;EXWM EXTRA SETTING&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(add-to-list &amp;#39;default-frame-alist &amp;#39;(fullscreen . maximized))
&lt;&#x2F;span&gt;&lt;span&gt;(setq exwm-workspace-show-all-buffers t)
&lt;&#x2F;span&gt;&lt;span&gt;(setq exwm-workspace-warp-cursor t)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;;TOUCHPAD SETTINGS 
&lt;&#x2F;span&gt;&lt;span&gt;(start-process-shell-command &amp;quot;touchpad-fix&amp;quot; nil &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;scripts&#x2F;exwm-touchpad-fix.sh&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;app-luncher&quot;&gt;APP LUNCHER&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(add-to-list &amp;#39;load-path &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;scripts&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;(require &amp;#39;app-launcher)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-power-menu&quot;&gt;EXWM POWER-MENU&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun my&#x2F;power-menu ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Launch the graphical power menu.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;wlogout&amp;quot; nil &amp;quot;wlogout&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING =====
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-p&amp;quot;) #&amp;#39;my&#x2F;power-menu) ;; FOR EMACS
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map [?\M-p] #&amp;#39;my&#x2F;power-menu) ;; FOR EXWM
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-screen-lock&quot;&gt;EXWM SCREEN LOCK&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun my&#x2F;lock-screen ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Lock the screen using i3lock.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process &amp;quot;betterlockscreen&amp;quot; nil &amp;quot;betterlockscreen&amp;quot; &amp;quot;--lock&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;update-lockscreen-background ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Update betterlockscreen background using the external script and notify via dunst.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((proc-name &amp;quot;update-lockscreen-bg&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;         (script-path &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;scripts&#x2F;betterlockscreen-wallpaper-update.sh&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;         (proc (start-process-shell-command
&lt;&#x2F;span&gt;&lt;span&gt;                proc-name
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;*betterlockscreen-output*&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                (concat &amp;quot;bash &amp;quot; script-path))))
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Notify when the update starts
&lt;&#x2F;span&gt;&lt;span&gt;    (start-process-shell-command &amp;quot;notify-start&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;                                  &amp;quot;notify-send &amp;#39;Betterlockscreen&amp;#39; &amp;#39;🔄 Updating lockscreen background...&amp;#39; -u low&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Notify when the update finishes
&lt;&#x2F;span&gt;&lt;span&gt;    (set-process-sentinel
&lt;&#x2F;span&gt;&lt;span&gt;     proc
&lt;&#x2F;span&gt;&lt;span&gt;     (lambda (_process event)
&lt;&#x2F;span&gt;&lt;span&gt;       (when (string= event &amp;quot;finished\n&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;         (start-process-shell-command &amp;quot;notify-end&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;                                      &amp;quot;notify-send &amp;#39;Betterlockscreen&amp;#39; &amp;#39;✅ Background update complete!&amp;#39; -u normal&amp;quot;))))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING =====
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-l&amp;quot;) #&amp;#39;my&#x2F;lock-screen) ;; FOR EMACS
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map [?\M-l] #&amp;#39;my&#x2F;lock-screen) ;; FOR EXWM
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwem-notification&quot;&gt;EXWEM NOTIFICATION&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;STARTING DUNST&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(start-process &amp;quot;dunst&amp;quot; nil &amp;quot;dunst&amp;quot;) ;; Starting Wireless conncetion 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;VOLUME CONTROL&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun volume-increase ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;volume up&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;quot;pactl set-sink-volume @DEFAULT_SINK@ +5% &amp;amp;&amp;amp; notify-send &amp;#39;Volume ↑&amp;#39; \&amp;quot;$(pactl get-sink-volume @DEFAULT_SINK@ | grep -oP &amp;#39;\\d+%&amp;#39; | head -1)\&amp;quot;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun volume-decrease ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;volume down&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;quot;pactl set-sink-volume @DEFAULT_SINK@ -5% &amp;amp;&amp;amp; notify-send &amp;#39;Volume ↓&amp;#39; \&amp;quot;$(pactl get-sink-volume @DEFAULT_SINK@ | grep -oP &amp;#39;\\d+%&amp;#39; | head -1)\&amp;quot;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun volume-mute-toggle ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;volume mute&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;quot;pactl set-sink-mute @DEFAULT_SINK@ toggle &amp;amp;&amp;amp; notify-send &amp;#39;Mute Toggled&amp;#39;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING FOR EMACS =====
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;XF86AudioRaiseVolume&amp;gt;&amp;quot;) &amp;#39;volume-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;XF86AudioLowerVolume&amp;gt;&amp;quot;) &amp;#39;volume-decrease)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;XF86AudioMute&amp;gt;&amp;quot;) &amp;#39;volume-mute-toggle)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING FOR EXWM =====
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map(kbd &amp;quot;&amp;lt;XF86AudioRaiseVolume&amp;gt;&amp;quot;) &amp;#39;volume-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map(kbd &amp;quot;&amp;lt;XF86AudioLowerVolume&amp;gt;&amp;quot;) &amp;#39;volume-decrease)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map(kbd &amp;quot;&amp;lt;XF86AudioMute&amp;gt;&amp;quot;) &amp;#39;volume-mute-toggle)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;BRIGHTNESS CONTROL&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun brightness-increase ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;brightness up&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;quot;brightnessctl set +3% &amp;amp;&amp;amp; notify-send &amp;#39;Brightness ↑&amp;#39; \&amp;quot;$(brightnessctl g | awk &amp;#39;{print int($1&#x2F;10)*10 \&amp;quot;%\&amp;quot;}&amp;#39;)\&amp;quot;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun brightness-decrease ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;brightness down&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;quot;brightnessctl set 3%- &amp;amp;&amp;amp; notify-send &amp;#39;Brightness ↓&amp;#39; \&amp;quot;$(brightnessctl g | awk &amp;#39;{print int($1&#x2F;10)*10 \&amp;quot;%\&amp;quot;}&amp;#39;)\&amp;quot;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING FOR EMACS =====
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;XF86MonBrightnessUp&amp;gt;&amp;quot;) &amp;#39;brightness-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;&amp;lt;XF86MonBrightnessDown&amp;gt;&amp;quot;) &amp;#39;brightness-decrease)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ====== KEYBINDING FOR EXWM =====
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;&amp;lt;XF86MonBrightnessUp&amp;gt;&amp;quot;) &amp;#39;brightness-increase)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;&amp;lt;XF86MonBrightnessDown&amp;gt;&amp;quot;) &amp;#39;brightness-decrease)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;sddm-background-update&quot;&gt;SDDM BACKGROUND UPDATE&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(defun my&#x2F;update-sddm-wallpaper ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Update SDDM wallpaper using external script in alacritty and notify via dunst.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let* ((proc-name &amp;quot;update-sddm-wallpaper&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;         (output-buffer &amp;quot;*sddm-wallpaper-output*&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;         (script-path (expand-file-name &amp;quot;~&#x2F;.config&#x2F;emacs&#x2F;scripts&#x2F;update-sddm-wallpaper.sh&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;         (terminal-command
&lt;&#x2F;span&gt;&lt;span&gt;          (format &amp;quot;alacritty -e bash -c &amp;#39;bash %s; read -n 1 -s -r -p \&amp;quot;[✓] Press any key to close...\&amp;quot;&amp;#39;&amp;quot; script-path))
&lt;&#x2F;span&gt;&lt;span&gt;         (proc (start-process-shell-command proc-name output-buffer terminal-command)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Notify when update starts
&lt;&#x2F;span&gt;&lt;span&gt;    (start-process-shell-command &amp;quot;notify-sddm-start&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;                                  &amp;quot;notify-send &amp;#39;SDDM&amp;#39; &amp;#39;🖼️ Updating SDDM wallpaper...&amp;#39; -u low&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ;; Notify when process finishes
&lt;&#x2F;span&gt;&lt;span&gt;    (set-process-sentinel
&lt;&#x2F;span&gt;&lt;span&gt;     proc
&lt;&#x2F;span&gt;&lt;span&gt;     (let ((buf output-buffer)) ;; 👈 pass buffer into lambda
&lt;&#x2F;span&gt;&lt;span&gt;       (lambda (_process event)
&lt;&#x2F;span&gt;&lt;span&gt;         (when (get-buffer buf)
&lt;&#x2F;span&gt;&lt;span&gt;           (kill-buffer buf))
&lt;&#x2F;span&gt;&lt;span&gt;         (if (string= event &amp;quot;finished\n&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;             (start-process-shell-command &amp;quot;notify-sddm-end&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;                                          &amp;quot;notify-send &amp;#39;SDDM&amp;#39; &amp;#39;✅ SDDM wallpaper updated successfully!&amp;#39; -u normal&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;           (start-process-shell-command &amp;quot;notify-sddm-fail&amp;quot; nil
&lt;&#x2F;span&gt;&lt;span&gt;                                        &amp;quot;notify-send &amp;#39;SDDM&amp;#39; &amp;#39;❌ SDDM wallpaper update failed!&amp;#39; -u critical&amp;quot;)))))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shortcut-for-lunching-application&quot;&gt;SHORTCUT FOR LUNCHING APPLICATION&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt; (defun my&#x2F;launch-firefox ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;launch firefox browser.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;firefox&amp;quot; nil &amp;quot;firefox&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; (defun my&#x2F;launch-nitrogen ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;launch firefox browser.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;nitrogen&amp;quot; nil &amp;quot;nitrogen&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;launch-thunar ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Launch Thunar file manager.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (start-process-shell-command &amp;quot;thunar&amp;quot; nil &amp;quot;thunar&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Global Emacs keybindings (optional, if you want to use outside EXWM buffers too)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-B&amp;quot;) #&amp;#39;my&#x2F;launch-firefox)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-e&amp;quot;) #&amp;#39;my&#x2F;launch-thunar)
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-N&amp;quot;) #&amp;#39;my&#x2F;launch-nitrogen)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; EXWM-specific keybindings
&lt;&#x2F;span&gt;&lt;span&gt;(with-eval-after-load &amp;#39;exwm
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key exwm-mode-map (kbd &amp;quot;M-B&amp;quot;) #&amp;#39;my&#x2F;launch-firefox)
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key exwm-mode-map (kbd &amp;quot;M-e&amp;quot;) #&amp;#39;my&#x2F;launch-thunar))
&lt;&#x2F;span&gt;&lt;span&gt;  (define-key exwm-mode-map (kbd &amp;quot;M-N&amp;quot;) #&amp;#39;my&#x2F;launch-nitrogen)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; ALACRITTY TOGGLE 
&lt;&#x2F;span&gt;&lt;span&gt;(defvar my&#x2F;alacritty-process-name &amp;quot;alacritty&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;kill-alacritty ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Kill all kitty windows.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (dolist (buffer (buffer-list))
&lt;&#x2F;span&gt;&lt;span&gt;    (with-current-buffer buffer
&lt;&#x2F;span&gt;&lt;span&gt;      (when (and (eq major-mode &amp;#39;exwm-mode)
&lt;&#x2F;span&gt;&lt;span&gt;                 (string-match &amp;quot;alacritty&amp;quot; (or exwm-class-name &amp;quot;&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;        (kill-buffer buffer)))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;toggle-alacritty ()
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Toggle alacritty terminal: launch if not visible, close if focused.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (let ((alacritty-buffer
&lt;&#x2F;span&gt;&lt;span&gt;         (seq-find (lambda (buf)
&lt;&#x2F;span&gt;&lt;span&gt;                     (with-current-buffer buf
&lt;&#x2F;span&gt;&lt;span&gt;                       (and (eq major-mode &amp;#39;exwm-mode)
&lt;&#x2F;span&gt;&lt;span&gt;                            (string-match &amp;quot;alacritty&amp;quot; (or exwm-class-name &amp;quot;&amp;quot;)))))
&lt;&#x2F;span&gt;&lt;span&gt;                   (buffer-list))))
&lt;&#x2F;span&gt;&lt;span&gt;    (if (and alacritty-buffer (eq (current-buffer) alacritty-buffer))
&lt;&#x2F;span&gt;&lt;span&gt;        ;; We&amp;#39;re in the alacritty window, so kill it
&lt;&#x2F;span&gt;&lt;span&gt;        (my&#x2F;kill-alacritty)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; Else, launch it
&lt;&#x2F;span&gt;&lt;span&gt;      (start-process-shell-command my&#x2F;alacritty-process-name nil &amp;quot;alacritty&amp;quot;))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-t&amp;quot;) #&amp;#39;my&#x2F;toggle-alacritty)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-t&amp;quot;) #&amp;#39;my&#x2F;toggle-alacritty)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; FULLSCREEN TOGGLE
&lt;&#x2F;span&gt;&lt;span&gt;(defvar my&#x2F;fullscreen-p nil
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;Toggle fullscreen mode.&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defun my&#x2F;toggle-fullscreen ()
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (if (not my&#x2F;fullscreen-p)
&lt;&#x2F;span&gt;&lt;span&gt;      (progn
&lt;&#x2F;span&gt;&lt;span&gt;        ;; Emacs frame fullscreen
&lt;&#x2F;span&gt;&lt;span&gt;        (set-frame-parameter nil &amp;#39;fullscreen &amp;#39;fullboth)
&lt;&#x2F;span&gt;&lt;span&gt;        ;; EXWM window fullscreen (works for tiling too)
&lt;&#x2F;span&gt;&lt;span&gt;        (when (eq major-mode &amp;#39;exwm-mode)
&lt;&#x2F;span&gt;&lt;span&gt;          (exwm-layout-set-fullscreen t))
&lt;&#x2F;span&gt;&lt;span&gt;        (setq my&#x2F;fullscreen-p t))
&lt;&#x2F;span&gt;&lt;span&gt;    (progn
&lt;&#x2F;span&gt;&lt;span&gt;      ;; Emacs frame normal
&lt;&#x2F;span&gt;&lt;span&gt;      (set-frame-parameter nil &amp;#39;fullscreen nil)
&lt;&#x2F;span&gt;&lt;span&gt;      ;; EXWM window un-fullscreen
&lt;&#x2F;span&gt;&lt;span&gt;      (when (eq major-mode &amp;#39;exwm-mode)
&lt;&#x2F;span&gt;&lt;span&gt;        (exwm-layout-unset-fullscreen))
&lt;&#x2F;span&gt;&lt;span&gt;      (setq my&#x2F;fullscreen-p nil))))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(global-set-key (kbd &amp;quot;M-m x&amp;quot;) #&amp;#39;my&#x2F;toggle-fullscreen)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m x&amp;quot;) #&amp;#39;my&#x2F;toggle-fullscreen)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;customized-function-name&quot;&gt;CUSTOMIZED FUNCTION NAME&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Power Menu
&lt;&#x2F;span&gt;&lt;span&gt;(defalias &amp;#39;Power-menu #&amp;#39;my&#x2F;power-menu)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Lock Screen
&lt;&#x2F;span&gt;&lt;span&gt;(defalias &amp;#39;Lock-screen #&amp;#39;my&#x2F;lock-screen)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Update Lock Screen Background
&lt;&#x2F;span&gt;&lt;span&gt;(defalias &amp;#39;Update-lockscreen-bg #&amp;#39;my&#x2F;update-lockscreen-background)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Update SDDM Wallpaper
&lt;&#x2F;span&gt;&lt;span&gt;(defalias &amp;#39;Update-sddm-wallpaper #&amp;#39;my&#x2F;update-sddm-wallpaper)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(defalias &amp;#39;ORG-TO-MD-CONVERT #&amp;#39;my&#x2F;org-md-export-to-markdown-with-header)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;exwm-keybindings&quot;&gt;EXWM KEYBINDINGS&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BUFFER&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Unbind M-b from any previous behavior (like backward-word)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b&amp;quot;) nil)  ;; Start defining a prefix for M-b in EXWM
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; EXWM controls under M-b
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b r&amp;quot;) &amp;#39;exwm-reset) ;; Reset EXWM
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b w&amp;quot;) &amp;#39;exwm-workspace-switch) ;; Switch workspace
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b i&amp;quot;) &amp;#39;exwm-workspace-switch-to-buffer) ;; Uncomment if needed
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b d&amp;quot;) &amp;#39;exwm-workspace-delete) ;; Delete workspace
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b h&amp;quot;) &amp;#39;windmove-left)  ;; Move focus left
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b j&amp;quot;) &amp;#39;windmove-down)  ;; Move focus down
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b l&amp;quot;) &amp;#39;windmove-right)  ;; Move focus right
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b k&amp;quot;) &amp;#39;kill-buffer-and-window)  ;; Kill buffer + window
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b f&amp;quot;) &amp;#39;exwm-floating-toggle-floating) ;; Toggle floating mode
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b m&amp;quot;) &amp;#39;exwm-layout-toggle-mode-line) ;; Toggle mode-line visibility
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-b q&amp;quot;) &amp;#39;exwm-input-release-keyboard) ;; Release EXWM keyboard Release
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;WINDOW&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Define M-w as a prefix key for EXWM
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w&amp;quot;) nil)  ;; Start defining a prefix for M-w in EXWM
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Window management keybindings
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w c&amp;quot;) &amp;#39;evil-window-delete)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w n&amp;quot;) &amp;#39;evil-window-new)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w s&amp;quot;) &amp;#39;evil-window-split)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w v&amp;quot;) &amp;#39;evil-window-vsplit)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w W&amp;quot;) &amp;#39;exwm-workspace-move-window)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Window motions
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w h&amp;quot;) &amp;#39;evil-window-left)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w j&amp;quot;) &amp;#39;evil-window-down)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w k&amp;quot;) &amp;#39;evil-window-up)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w l&amp;quot;) &amp;#39;evil-window-right)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w w&amp;quot;) &amp;#39;evil-window-next)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Move windows
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w H&amp;quot;) &amp;#39;buf-move-left)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w J&amp;quot;) &amp;#39;buf-move-down)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w K&amp;quot;) &amp;#39;buf-move-up)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w L&amp;quot;) &amp;#39;buf-move-right)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-w m&amp;quot;) &amp;#39;save-buffers-kill-emacs)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;DIRED AND MENU&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; Define M-d as a prefix key in EXWM mode
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;;; Dired keybindings under M-d for exwm
&lt;&#x2F;span&gt;&lt;span&gt;;; (define-key exwm-mode-map (kbd &amp;quot;M-d D&amp;quot;) &amp;#39;dired) ;; Open dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d D&amp;quot;) &amp;#39;counsel-linux-app) ;; Open dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d d&amp;quot;) &amp;#39;app-launcher-run-app)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d j&amp;quot;) &amp;#39;dired-jump) ;; Jump to current directory in Dired
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d n&amp;quot;) &amp;#39;neotree-dir) ;; Open directory in Neotree
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-d p&amp;quot;) &amp;#39;peep-dired) ;; Peep Dired preview
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;PERSONAL KEYBINDINGS&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;;; ===== personal keybinding for menus =====
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m&amp;quot;) nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m m&amp;quot;) #&amp;#39;ORG-TO-MD-CONVERT)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m l&amp;quot;) #&amp;#39;Lock-screen)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m b&amp;quot;) #&amp;#39;Update-lockscreen-bg)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m p&amp;quot;) #&amp;#39;Update-sddm-wallpaper)
&lt;&#x2F;span&gt;&lt;span&gt;(define-key exwm-mode-map (kbd &amp;quot;M-m x&amp;quot;) &amp;#39;exwm-layout-toggle-fullscreen)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>HOW TO INSTALL AND CONFIGURE EMACS</title>
        <published>2025-08-02T00:00:00+00:00</published>
        <updated>2025-08-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/blog/EMACS/how-to-install-and-configure-emacs/"/>
        <id>https://nothing-r.github.io/The_Orcas/blog/EMACS/how-to-install-and-configure-emacs/</id>
        
        <content type="html" xml:base="https://nothing-r.github.io/The_Orcas/blog/EMACS/how-to-install-and-configure-emacs/">&lt;h1 id=&quot;emacs-ki&quot;&gt;EMACS KI&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;EMACS&lt;&#x2F;a&gt; akta open source gnu software. Ja ak sathe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;emacs&#x2F;windows&#x2F;emacs-30&#x2F;emacs-30.1-installer.exe&quot;&gt;windows&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;download.html#gnu-linux&quot;&gt;linux&lt;&#x2F;a&gt; abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repo&#x2F;com.termux_1022.apk&quot;&gt;android&lt;&#x2F;a&gt; a use kora jai. Emacs ami first dekhcilam &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@hexdump1337&quot;&gt;hexdump1337&lt;&#x2F;a&gt; er video te. To onar workflow dekhar pore r onar system use kora dekhe ami onk impressed hoi. R tkhn theke e emacs er upor agroho jonmai abong ami sekhar try kora suru kori. To ay prai 1 bocor er moto ghataghati korar pore ami amr personal emacs customize korci. Nijer moto kore nijer proyojon onujai. Ami ja ja sikhci sob e just nijer interest abong Internet theke. Youtube a emacs er jonno 2 jon k follow korci, onader tutorial dekhe e emacs customize korci abong emacs er basic jinis gula sikhci.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=48JlgiBpw_I&amp;amp;list=PLEoMzSkcN8oPZvSdewHG8uApD7THlLLCV&quot;&gt;System Crafters&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=d1fgypEiQkE&amp;amp;list=PL5--8gKSku15e8lXf7aLICFmAHQVo0KXX&quot;&gt;Distro Tube&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;So ay youtube channel dui ta amk onk help korce jdio jinis gula onk purano…tobuo besh helpfull…r j jinis gula nia amr confusion cilo oi gula &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;chatgpt.com&#x2F;&quot;&gt;ChatGpt&lt;&#x2F;a&gt; er kace question kore kore sikhci. ay vabe e mainly amr emacs sekha.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;emacs-e-kno&quot;&gt;Emacs e kno?&lt;&#x2F;h1&gt;
&lt;p&gt;Asole Emacs amon akta software j ta jdi akbar bojha jai tahole ayta k sob kaj er jonno use kora jai sob kicur jonno. R workflow next level, hexdump er video dekhle bojha jai j emacs k kon level porjonto nea jai. Ayta amr personal opinion. Karon ami hexdump1337 er theke inspired. R onk ta emacs er upor obsessed o bola jai. Ami asole akta proper environment banaite cacci jate kore ay software tar somporke r o onk manus jante pare. Amr mone hoi ayta onk help korbe bises kore notun der jader kace device nai. Jate tara phone diao emacs sikhte pare abong poroborti te jkhn laptop ba pc te shift hobe tara same jinis ta dia e kaj korte pare. Ami nijeo akhono sikhci to amr vhul thakte pare ay jonno please nijera aktu jacai kore niben sob jinis gula.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;emacs-setup&quot;&gt;Emacs setup&lt;&#x2F;h1&gt;
&lt;p&gt;Ami first a e bolci j emacs amr use kora 3 ta os a e kaj kore thik vabe. Kintu ami use kori Linux abong Android a. To step by step akta guide dear try korci j kivabe Linux abong Android a Emacs use kora jai.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;linux-arch-linux&quot;&gt;LINUX (ARCH LINUX)&lt;&#x2F;h2&gt;
&lt;p&gt;Linux distro gular vitore sob theke customizable hocce arch linux abong arch k nijer moto kore control kora jai ay jonno e Amr first dia e issa cilo arch linux use korar, kintu arch aktu advance to first a ami arch install korte pari nai kintu sob smy e amr issa cilo akta minimum setup er r amr dream setup sudhu matro arch linux dia e somvob, r amk arch linux use korar jonno r o besi motivate korce &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;leonardotamiano.xyz&#x2F;&quot;&gt;Leonardo Tamiano&lt;&#x2F;a&gt;, unio  &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archlinux.org&#x2F;&quot;&gt;Arch Linux&lt;&#x2F;a&gt; k nijer main os hisabe use kore. Ay jonno amr first task cilo arch linux install kora main os hisabe to ami first a vm a practice kora suru kori ay vido ta dekhe:-&lt;&#x2F;p&gt;
&lt;iframe width=&quot;350&quot; height=&quot;200&quot;
  src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;AYxaNjbC1wg&quot;
  title=&quot;YouTube video player&quot;
  frameborder=&quot;0&quot;
  allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot;
  allowfullscreen&gt;
  &lt;&#x2F;iframe&gt;
&lt;p&gt;Arch setup er smy &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment&quot;&gt;Desktop Environment&lt;&#x2F;a&gt; hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;GNOME&quot;&gt;Gnome&lt;&#x2F;a&gt; rakha ucit. Ayta ami recently figure out korci j gnome install korle font rendering ta mainly bangla font gula arch linux a thik thak install hoi. R ayta carao amio amr second &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment&quot;&gt;DE&lt;&#x2F;a&gt; hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;i3wm.org&#x2F;&quot;&gt;i3wm&lt;&#x2F;a&gt; bebohar kori. Asole ami jkhn first exwm somporke jani abong chatgpt k ask kori j ay jinis ta ki tkhn amk bolcilo ayta k window manager bole. To oitar por dia ami window manager ki abong kivabe kaj kore oita sekha suru kori. To first a amr samne 2 ta name ascilo i3wm abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;qtile.org&#x2F;&quot;&gt;qtile&lt;&#x2F;a&gt; ami tkhn python sekharo try kortacilam r jehetu qtile mainly python based to qtile try korcilam kicu din. Asole oi smy ami just explore kortacilam j konta workout kore amr jonno. To ami kicu e jantam na akbare notun tkhn….to kicu din aktu ghataghati korar pore ami i3wm ta e chooce kori abong oi ta k bojhar try kori. Tarpore prai 6 mas er moto i3wm abong arch linux as a main os hisabe use korci. Abong i3wm er sathe sathe ami emacs ta o explore kora suru kori. First suru korcilam Distro Tube er video diye to onar video ta amr jonno tkhn bolte gele aktu besi advance cilo. To oi jonno ami tkhn system crafters er video mane playlist ta dekha suru kori emacs from scratch. Oikhan theke asole bojha suru kori j kivabe emacs kaj kore buffer, window abong frame ki, kivabe kaj kore, keybindings basic jinis gula. To kew jdi emacs a suru korte cai to ami joto dur khuje peyeci tader ay playlist dui ta dekha ucit jdi amr explanation diye tara na bujhte pare tahole. Content gula purano hoile basic cover korce abong basic ta always same.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;basic-setup-of-arch-linux&quot;&gt;BASIC SETUP OF ARCH LINUX&lt;&#x2F;h2&gt;
&lt;p&gt;Ami Arch linux amr nijer moto kore setup korci. Ami jkhn arch somporke jana suru kori to Arch kivabe asole kaj kore kernel er theke suru kore Application run korar jonno ki ki jinis er proyojon abong ki ki dorkar. Ami abro boli j ami sob kicui Internet theke janci to amr janai vhul thakte pare, vhul thakle please amk jinis ta janaben jate ami improve korte pari. So First a arch install korar pore amader kicu jinis er proyojon hoi system ta k thik vabe use korar jonno akta &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Xorg&quot;&gt;display server&lt;&#x2F;a&gt; ja keyboard, mouse abong onno sob hardware abong onno sob driver gulo theke asa signal k kaj a lagano jate kore user j &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Display_manager&quot;&gt;display manager&lt;&#x2F;a&gt; use korce oi display manger jeno user k thik vabe graphical interface provide korte pare. Emacs akta x11 based software to amader x11 releted package gulo amader system a install kora lagbe. Ami amr display manager hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;SDDM&quot;&gt;sddm&lt;&#x2F;a&gt; bebohar kori. Karon ayta amr kace easy mone hoi abong besh customizable. Akta system ta k valo vabe beobhar korar jonno just r 2 ta jinis er dorkar hoi akta &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Session_lock&quot;&gt;session lock&lt;&#x2F;a&gt; r akta power menu. To ami ay gular picone tmn smy dei nai just aktu khuje khub simple 2 ta tool paici oi duita e use kori…..screen lock korar jonno &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;betterlockscreen&#x2F;betterlockscreen&quot;&gt;betterlockscreen&lt;&#x2F;a&gt; r power menu hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ArtsyMacaw&#x2F;wlogout&quot;&gt;wlogout&lt;&#x2F;a&gt;. R main akta jinis ace oita hocce systemd, systemd hocche Linux system er ekta init system and service manager. Ami systemd niya akhono pori nai kicu future a jananor try korbo. To arch use korar jonno amader mainly 4 ta jinis configure kora lagbe:-&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Xorg&quot;&gt;DISPLAY SERVER&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Display_manager&quot;&gt;DISPLAY MANAGER&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;betterlockscreen&#x2F;betterlockscreen&quot;&gt;LOCK SCREEN&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ArtsyMacaw&#x2F;wlogout&quot;&gt;POWER MENU&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Ay 4 ta jinis configure already kora ace amr ami cotto akta bash script use kori arch configure korar jonno. Command gula just terminal a paste kore dile e puro arch setup hoye jabe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;sudo pacman -S git
&lt;&#x2F;span&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;INSTALL_SCRIPT.git
&lt;&#x2F;span&gt;&lt;span&gt;cd INSTALL_SCRIPT
&lt;&#x2F;span&gt;&lt;span&gt;.&#x2F;install.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Akhn just permission abong password gula dite hobe tyle e setup done.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setup-of-emacs-on-arch&quot;&gt;SETUP OF EMACS ON ARCH&lt;&#x2F;h2&gt;
&lt;p&gt;Emacs mainly akta text editor kintu ayta k thik thak vabe customize korle tmi ayta k akta window manager hisabe use kora possible. Jmn ta ami kori amr window manager hocce &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;EXWM&quot;&gt;EXWM&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;exwm.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;h3 id=&quot;two-simple-task&quot;&gt;TWO SIMPLE TASK&lt;&#x2F;h3&gt;
&lt;p&gt;ami amr emacs setup a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;progfolio&#x2F;elpaca&quot;&gt;elpaca&lt;&#x2F;a&gt;, melpa, elpa abong orgmode repo use korci. Abong amr sob packge gulo ay repo theke e add kora.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;package)
&lt;&#x2F;span&gt;&lt;span&gt;(setq package-archives
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;#39;((&amp;quot;gnu&amp;quot; . &amp;quot;https:&#x2F;&#x2F;elpa.gnu.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;melpa&amp;quot; . &amp;quot;https:&#x2F;&#x2F;melpa.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;org&amp;quot; . &amp;quot;https:&#x2F;&#x2F;orgmode.org&#x2F;elpa&#x2F;&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;(package-initialize)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Kintu ami 2 ta jinis solve korte pari nai first hocce exwm package ta ami use-package command diye download korte pari nai oita amr emacs er defult repo theke add kora lagbe require command use kore. To require command diye kicu add korte hoile oi package ta age M-x RET package-name RET diye download korte hoi. Tarpore oita use kora jai. To emacs open korar pore first sob kicu configure korar pore M-x RET package-install command diye emacs a 2 ta package download korte hobe 1st exwm r hooce vterm-toggle.&lt;&#x2F;p&gt;
&lt;p&gt;M-x:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;M-x.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;package-install RET:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;package-install.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;Installing Exwm:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;exwm-install.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;er pore e ay command ta kaj korbe&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;exwm)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;emacs&#x2F;.config&#x2F;emacs&#x2F;config.org&quot;&gt;EMACS CONFIG&lt;&#x2F;a&gt; ta te full emacs er config dea ace. Caile e dekhe nite paro.&lt;&#x2F;p&gt;
&lt;p&gt;Ami ayvabe e amr arch a exwm setup kori.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;android&quot;&gt;ANDROID&lt;&#x2F;h2&gt;
&lt;p&gt;Android a o sorasori emacs download kora jai kintu oita te ami keyboard ante pari nai. Ami onk age theke e android a termux use kortam tkhn mathai aslo j emacs er cli to termux a use kora jaite pare ay jonno ami &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;en&#x2F;packages&#x2F;com.termux&#x2F;&quot;&gt;termux&lt;&#x2F;a&gt; a emacs run korar try kori abong ses porjonto ayta te kaj o hoi. So android device a emacs use korar jonno termux lagbe. To first a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repo&#x2F;com.termux_1022.apk&quot;&gt;termux apk&lt;&#x2F;a&gt; download korte hobe android device a. Tarpore termux open korar pore just ay command gula termux a paste kore dile e hobe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;cd ~
&lt;&#x2F;span&gt;&lt;span&gt;termux-setup-storage
&lt;&#x2F;span&gt;&lt;span&gt;pkg update &amp;amp;&amp;amp; pkg upgrade -y
&lt;&#x2F;span&gt;&lt;span&gt;pkg install git emacs
&lt;&#x2F;span&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;Termux_emacs.git ~&#x2F;.emacs.d
&lt;&#x2F;span&gt;&lt;span&gt;emacs
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Er pore kicu smy emacs er sob package download hoya porjonto wait korte hobe. Tarpore emacs close kore abro open korte hobe&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C-c C-x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;emacs
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ayvabe e emacs install abong setup korte hoi linux abong android a. R jdi kew main os hisabe windows use koren tahole vmware ba virtualbox a arch linux install kore tarpore emacs use korte paren.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>HOW TO INSTALL AND CONFIGURE EMACS</title>
        <published>2025-08-02T00:00:00+00:00</published>
        <updated>2025-08-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/system/how-to-install-and-configure-emacs/"/>
        <id>https://nothing-r.github.io/The_Orcas/system/how-to-install-and-configure-emacs/</id>
        
        <content type="html" xml:base="https://nothing-r.github.io/The_Orcas/system/how-to-install-and-configure-emacs/">&lt;h1 id=&quot;emacs-ki&quot;&gt;EMACS KI&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;EMACS&lt;&#x2F;a&gt; akta open source gnu software. Ja ak sathe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;emacs&#x2F;windows&#x2F;emacs-30&#x2F;emacs-30.1-installer.exe&quot;&gt;windows&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;download.html#gnu-linux&quot;&gt;linux&lt;&#x2F;a&gt; abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repo&#x2F;com.termux_1022.apk&quot;&gt;android&lt;&#x2F;a&gt; a use kora jai. Emacs ami first dekhcilam &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@hexdump1337&quot;&gt;hexdump1337&lt;&#x2F;a&gt; er video te. To onar workflow dekhar pore r onar system use kora dekhe ami onk impressed hoi. R tkhn theke e emacs er upor agroho jonmai abong ami sekhar try kora suru kori. To ay prai 1 bocor er moto ghataghati korar pore ami amr personal emacs customize korci. Nijer moto kore nijer proyojon onujai. Ami ja ja sikhci sob e just nijer interest abong Internet theke. Youtube a emacs er jonno 2 jon k follow korci, onader tutorial dekhe e emacs customize korci abong emacs er basic jinis gula sikhci.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=48JlgiBpw_I&amp;amp;list=PLEoMzSkcN8oPZvSdewHG8uApD7THlLLCV&quot;&gt;System Crafters&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=d1fgypEiQkE&amp;amp;list=PL5--8gKSku15e8lXf7aLICFmAHQVo0KXX&quot;&gt;Distro Tube&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;So ay youtube channel dui ta amk onk help korce jdio jinis gula onk purano…tobuo besh helpfull…r j jinis gula nia amr confusion cilo oi gula &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;chatgpt.com&#x2F;&quot;&gt;ChatGpt&lt;&#x2F;a&gt; er kace question kore kore sikhci. ay vabe e mainly amr emacs sekha.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;emacs-e-kno&quot;&gt;Emacs e kno?&lt;&#x2F;h1&gt;
&lt;p&gt;Asole Emacs amon akta software j ta jdi akbar bojha jai tahole ayta k sob kaj er jonno use kora jai sob kicur jonno. R workflow next level, hexdump er video dekhle bojha jai j emacs k kon level porjonto nea jai. Ayta amr personal opinion. Karon ami hexdump1337 er theke inspired. R onk ta emacs er upor obsessed o bola jai. Ami asole akta proper environment banaite cacci jate kore ay software tar somporke r o onk manus jante pare. Amr mone hoi ayta onk help korbe bises kore notun der jader kace device nai. Jate tara phone diao emacs sikhte pare abong poroborti te jkhn laptop ba pc te shift hobe tara same jinis ta dia e kaj korte pare. Ami nijeo akhono sikhci to amr vhul thakte pare ay jonno please nijera aktu jacai kore niben sob jinis gula.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;emacs-setup&quot;&gt;Emacs setup&lt;&#x2F;h1&gt;
&lt;p&gt;Ami first a e bolci j emacs amr use kora 3 ta os a e kaj kore thik vabe. Kintu ami use kori Linux abong Android a. To step by step akta guide dear try korci j kivabe Linux abong Android a Emacs use kora jai.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;linux-arch-linux&quot;&gt;LINUX (ARCH LINUX)&lt;&#x2F;h2&gt;
&lt;p&gt;Linux distro gular vitore sob theke customizable hocce arch linux abong arch k nijer moto kore control kora jai ay jonno e Amr first dia e issa cilo arch linux use korar, kintu arch aktu advance to first a ami arch install korte pari nai kintu sob smy e amr issa cilo akta minimum setup er r amr dream setup sudhu matro arch linux dia e somvob, r amk arch linux use korar jonno r o besi motivate korce &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;leonardotamiano.xyz&#x2F;&quot;&gt;Leonardo Tamiano&lt;&#x2F;a&gt;, unio  &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archlinux.org&#x2F;&quot;&gt;Arch Linux&lt;&#x2F;a&gt; k nijer main os hisabe use kore. Ay jonno amr first task cilo arch linux install kora main os hisabe to ami first a vm a practice kora suru kori ay vido ta dekhe:-&lt;&#x2F;p&gt;
&lt;iframe width=&quot;350&quot; height=&quot;200&quot;
  src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;AYxaNjbC1wg&quot;
  title=&quot;YouTube video player&quot;
  frameborder=&quot;0&quot;
  allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot;
  allowfullscreen&gt;
  &lt;&#x2F;iframe&gt;
&lt;p&gt;Arch setup er smy &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment&quot;&gt;Desktop Environment&lt;&#x2F;a&gt; hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;GNOME&quot;&gt;Gnome&lt;&#x2F;a&gt; rakha ucit. Ayta ami recently figure out korci j gnome install korle font rendering ta mainly bangla font gula arch linux a thik thak install hoi. R ayta carao amio amr second &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment&quot;&gt;DE&lt;&#x2F;a&gt; hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;i3wm.org&#x2F;&quot;&gt;i3wm&lt;&#x2F;a&gt; bebohar kori. Asole ami jkhn first exwm somporke jani abong chatgpt k ask kori j ay jinis ta ki tkhn amk bolcilo ayta k window manager bole. To oitar por dia ami window manager ki abong kivabe kaj kore oita sekha suru kori. To first a amr samne 2 ta name ascilo i3wm abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;qtile.org&#x2F;&quot;&gt;qtile&lt;&#x2F;a&gt; ami tkhn python sekharo try kortacilam r jehetu qtile mainly python based to qtile try korcilam kicu din. Asole oi smy ami just explore kortacilam j konta workout kore amr jonno. To ami kicu e jantam na akbare notun tkhn….to kicu din aktu ghataghati korar pore ami i3wm ta e chooce kori abong oi ta k bojhar try kori. Tarpore prai 6 mas er moto i3wm abong arch linux as a main os hisabe use korci. Abong i3wm er sathe sathe ami emacs ta o explore kora suru kori. First suru korcilam Distro Tube er video diye to onar video ta amr jonno tkhn bolte gele aktu besi advance cilo. To oi jonno ami tkhn system crafters er video mane playlist ta dekha suru kori emacs from scratch. Oikhan theke asole bojha suru kori j kivabe emacs kaj kore buffer, window abong frame ki, kivabe kaj kore, keybindings basic jinis gula. To kew jdi emacs a suru korte cai to ami joto dur khuje peyeci tader ay playlist dui ta dekha ucit jdi amr explanation diye tara na bujhte pare tahole. Content gula purano hoile basic cover korce abong basic ta always same.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;basic-setup-of-arch-linux&quot;&gt;BASIC SETUP OF ARCH LINUX&lt;&#x2F;h2&gt;
&lt;p&gt;Ami Arch linux amr nijer moto kore setup korci. Ami jkhn arch somporke jana suru kori to Arch kivabe asole kaj kore kernel er theke suru kore Application run korar jonno ki ki jinis er proyojon abong ki ki dorkar. Ami abro boli j ami sob kicui Internet theke janci to amr janai vhul thakte pare, vhul thakle please amk jinis ta janaben jate ami improve korte pari. So First a arch install korar pore amader kicu jinis er proyojon hoi system ta k thik vabe use korar jonno akta &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Xorg&quot;&gt;display server&lt;&#x2F;a&gt; ja keyboard, mouse abong onno sob hardware abong onno sob driver gulo theke asa signal k kaj a lagano jate kore user j &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Display_manager&quot;&gt;display manager&lt;&#x2F;a&gt; use korce oi display manger jeno user k thik vabe graphical interface provide korte pare. Emacs akta x11 based software to amader x11 releted package gulo amader system a install kora lagbe. Ami amr display manager hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;SDDM&quot;&gt;sddm&lt;&#x2F;a&gt; bebohar kori. Karon ayta amr kace easy mone hoi abong besh customizable. Akta system ta k valo vabe beobhar korar jonno just r 2 ta jinis er dorkar hoi akta &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Session_lock&quot;&gt;session lock&lt;&#x2F;a&gt; r akta power menu. To ami ay gular picone tmn smy dei nai just aktu khuje khub simple 2 ta tool paici oi duita e use kori…..screen lock korar jonno &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;betterlockscreen&#x2F;betterlockscreen&quot;&gt;betterlockscreen&lt;&#x2F;a&gt; r power menu hisabe &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ArtsyMacaw&#x2F;wlogout&quot;&gt;wlogout&lt;&#x2F;a&gt;. R main akta jinis ace oita hocce systemd, systemd hocche Linux system er ekta init system and service manager. Ami systemd niya akhono pori nai kicu future a jananor try korbo. To arch use korar jonno amader mainly 4 ta jinis configure kora lagbe:-&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Xorg&quot;&gt;DISPLAY SERVER&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Display_manager&quot;&gt;DISPLAY MANAGER&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;betterlockscreen&#x2F;betterlockscreen&quot;&gt;LOCK SCREEN&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ArtsyMacaw&#x2F;wlogout&quot;&gt;POWER MENU&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Ay 4 ta jinis configure already kora ace amr ami cotto akta bash script use kori arch configure korar jonno. Command gula just terminal a paste kore dile e puro arch setup hoye jabe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;sudo pacman -S git
&lt;&#x2F;span&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;INSTALL_SCRIPT.git
&lt;&#x2F;span&gt;&lt;span&gt;cd INSTALL_SCRIPT
&lt;&#x2F;span&gt;&lt;span&gt;.&#x2F;install.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Akhn just permission abong password gula dite hobe tyle e setup done.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setup-of-emacs-on-arch&quot;&gt;SETUP OF EMACS ON ARCH&lt;&#x2F;h2&gt;
&lt;p&gt;Emacs mainly akta text editor kintu ayta k thik thak vabe customize korle tmi ayta k akta window manager hisabe use kora possible. Jmn ta ami kori amr window manager hocce &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;EXWM&quot;&gt;EXWM&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;exwm.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;h3 id=&quot;two-simple-task&quot;&gt;TWO SIMPLE TASK&lt;&#x2F;h3&gt;
&lt;p&gt;ami amr emacs setup a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;progfolio&#x2F;elpaca&quot;&gt;elpaca&lt;&#x2F;a&gt;, melpa, elpa abong orgmode repo use korci. Abong amr sob packge gulo ay repo theke e add kora.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;package)
&lt;&#x2F;span&gt;&lt;span&gt;(setq package-archives
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;#39;((&amp;quot;gnu&amp;quot; . &amp;quot;https:&#x2F;&#x2F;elpa.gnu.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;melpa&amp;quot; . &amp;quot;https:&#x2F;&#x2F;melpa.org&#x2F;packages&#x2F;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        (&amp;quot;org&amp;quot; . &amp;quot;https:&#x2F;&#x2F;orgmode.org&#x2F;elpa&#x2F;&amp;quot;)))
&lt;&#x2F;span&gt;&lt;span&gt;(package-initialize)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Kintu ami 2 ta jinis solve korte pari nai first hocce exwm package ta ami use-package command diye download korte pari nai oita amr emacs er defult repo theke add kora lagbe require command use kore. To require command diye kicu add korte hoile oi package ta age M-x RET package-name RET diye download korte hoi. Tarpore oita use kora jai. To emacs open korar pore first sob kicu configure korar pore M-x RET package-install command diye emacs a 2 ta package download korte hobe 1st exwm r hooce vterm-toggle.&lt;&#x2F;p&gt;
&lt;p&gt;M-x:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;M-x.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;package-install RET:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;package-install.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;Installing Exwm:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;EMACS&#x2F;exwm-install.png&quot; alt=&quot;IMAGE&quot; width=&quot;300&quot; height=&quot;220&quot;&gt;
&lt;p&gt;er pore e ay command ta kaj korbe&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;(require &amp;#39;exwm)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;emacs&#x2F;.config&#x2F;emacs&#x2F;config.org&quot;&gt;EMACS CONFIG&lt;&#x2F;a&gt; ta te full emacs er config dea ace. Caile e dekhe nite paro.&lt;&#x2F;p&gt;
&lt;p&gt;Ami ayvabe e amr arch a exwm setup kori.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;android&quot;&gt;ANDROID&lt;&#x2F;h2&gt;
&lt;p&gt;Android a o sorasori emacs download kora jai kintu oita te ami keyboard ante pari nai. Ami onk age theke e android a termux use kortam tkhn mathai aslo j emacs er cli to termux a use kora jaite pare ay jonno ami &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;en&#x2F;packages&#x2F;com.termux&#x2F;&quot;&gt;termux&lt;&#x2F;a&gt; a emacs run korar try kori abong ses porjonto ayta te kaj o hoi. So android device a emacs use korar jonno termux lagbe. To first a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repo&#x2F;com.termux_1022.apk&quot;&gt;termux apk&lt;&#x2F;a&gt; download korte hobe android device a. Tarpore termux open korar pore just ay command gula termux a paste kore dile e hobe:-&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;cd ~
&lt;&#x2F;span&gt;&lt;span&gt;termux-setup-storage
&lt;&#x2F;span&gt;&lt;span&gt;pkg update &amp;amp;&amp;amp; pkg upgrade -y
&lt;&#x2F;span&gt;&lt;span&gt;pkg install git emacs
&lt;&#x2F;span&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;NOTHING-R&#x2F;Termux_emacs.git ~&#x2F;.emacs.d
&lt;&#x2F;span&gt;&lt;span&gt;emacs
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Er pore kicu smy emacs er sob package download hoya porjonto wait korte hobe. Tarpore emacs close kore abro open korte hobe&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C-c C-x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;emacs
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ayvabe e emacs install abong setup korte hoi linux abong android a. R jdi kew main os hisabe windows use koren tahole vmware ba virtualbox a arch linux install kore tarpore emacs use korte paren.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>WHAT I USE</title>
        <published>2025-07-29T00:00:00+00:00</published>
        <updated>2025-07-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/system/what-i-use/"/>
        <id>https://nothing-r.github.io/The_Orcas/system/what-i-use/</id>
        
        <content type="html" xml:base="https://nothing-r.github.io/The_Orcas/system/what-i-use/">&lt;h1 id=&quot;a-short-story&quot;&gt;A SHORT STORY&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;de&quot;&gt;DE&lt;&#x2F;h2&gt;
&lt;p&gt;Ami akjon youtuber k follow kori 2024 er last diye &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@hexdump1337&quot;&gt;hexdump1337&lt;&#x2F;a&gt;. Uni just akta software e mainly use kore sob kaj er jonno &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Emacs&quot;&gt;emacs&lt;&#x2F;a&gt;. From then I got interest into EMACS. And I always want to use my system like &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;leonardotamiano.xyz&#x2F;&quot;&gt;leonardotamiano&lt;&#x2F;a&gt;. Ami 2024 er middle er dik diya emacs niya ghataghati suru kori to amr first target cilo druto jinis gula sikhe kaj suru kore kintu amr sathe sob smy e kno jeno aktu ultapalta hoi to ami tkhn &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;doomemacs&#x2F;doomemacs&quot;&gt;DOOM EMACS&lt;&#x2F;a&gt; use korte pari nai amr system a kicu error ascilo to tarpore e amr emacs puro scratch theke build kora suru kora lagbe leo er moto akta config paoyar jnno. R emacs er tmn kno valo well documented resources ami youtube abong online a pai na ja dia ami shojei jinis gula sikhte parbo. To ami first a suru kori &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=74zOY-vgkyw&amp;amp;list=PLEoMzSkcN8oPH1au7H6B7bBJ4ZO7BXjSZ&quot;&gt;system crafters emacs from scratch&lt;&#x2F;a&gt; ay playlist ta diye. To onar video ta 4 bocor er moto purano to onk kicu e update hoice emacs er goto 4 bocor a. tobuo joto dur somvob ami oita dia e sekhar try korci abong basic jinis gula sikhci r jkhn ja nia confusion cilo oi ta ChatGpt diya valo vabe bujhe near try korci. To ami jehetu kicui jantam na r updated information khub e kom cilo r amr emacs-lisp er dharonao cilo na kno. to chatgpt er kach theke code niye jkhn emacs a ditam tkhn amon onk bar hoice j amr config abr scratch theke kora lagbe akta code er jonno. To er pore r akta updated youtube playlist pai oita hocce &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@DistroTube&quot;&gt;DistroTube&lt;&#x2F;a&gt; Onaro akta emacs from scratch playlist ace &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=d1fgypEiQkE&amp;amp;list=PL5--8gKSku15e8lXf7aLICFmAHQVo0KXX&amp;amp;pp=0gcJCV8EOCosWNin&quot;&gt;EFS DISTRoTube&lt;&#x2F;a&gt;. ayta aktu updated to oita dekhe ami motamuti akta configuretion kore feli amr emacs er jonno. Kintu oi j Leonardotamiano, onar moto configuretion lagbe amr. To oi jinis gular jonno chatgpt abong online a onk ghataghati kora lagce amr jinis gula bojha lagce akta akta kore er pore jeye ami amr emacs ta banaite parci. To ayta akta long process cilo kintu ami happy akhn nijer moto kore nijer emacs ta configuretion korte parate. R motamoti akhn emacs a kno error asle oita bujhte pari abong solve korte pari r akbare notun kicu asle Chatgpt to ace e. So ayvabe e mainly amr system configuretion er suru. Ayta cilo hocce ami amr &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Desktop_environment&quot;&gt;DE&lt;&#x2F;a&gt; ta kivbe sajiyeci.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;main-os&quot;&gt;MAIN OS&lt;&#x2F;h2&gt;
&lt;p&gt;Asole ami Windows khub e kom bebohar koreci amr first laptop kena 2023 er November a. To tkhn theke ami kali linux use kortam even phone a o termux use kore linux ta sekhar try kortacilam. To ami jkhn laptop kini tarpore e vmware a kali linux diye amr kali linux e besi use kora hoito karon ami cybersecurity niye besi interested cilam to oi dik theke e kali linux, parrot os ay gular sathe ami poricito hoi. To ami tkhn boot option tarpore kivabe akta os dea jai, kivabe os change kora jai ay sob somporkte amr kno dharone e cilo na. Amr kicu frnd cilo ak ak jon er kach theke ak akta jinis sikhcilam kivabe akta bootable penderive banaite hoi tarpore kivebae os change korte hoi. To amr first laptop r onk sokher jinis ay jonno nije pakami kore kicu korar sahos paccilam na. Tarpore akta frnd er sahajje 1 mas pore first kali linux dei main os hisabe. Tarpore koi ak mas use korar pore dekhlam j kali bar bar e problem kore j kno kicu nia. Hoito puro system crash kore na hoi frezee hoye jai. Akhn alternative khoja suru korlam j ki use kora jai. To er pore Ubuntu tarpore Parrot os use korci kicu din. Kintu amr abr problem ace mon moto na hoile system use kore santi pai na r use o korte pari na. To er pore akdin Sara rat na ghumiye parrot os er look change kore kali linux er moto korcilam. Mane just look change korar jonno sara rat katai dici. Faltu akta kaj cilo oita amr. Parrot use korcilam kicu din valovabe kintu oita te frezee problem cilo mane kicu smy er jonno aka aka e frezee hoye jaito cpu use’s 100%  hoye jaito abr aka aka thik hoito to or pore ami abro onno kicu khoja suru kori. R er pasapasi explore korte korte ami bujhlam j nijer system ta asole minimal hoye ucit abong sob kicu nijer moto kore sajano ucit kintu aytar jonno sob theke valo 2 ta option.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.debian.org&#x2F;&quot;&gt;Debian&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archlinux.org&#x2F;&quot;&gt;ARCH LINUX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;akhn arch to advance userder jonno ami to kicui pari na linux er tmn. Just gpt er kach theke r online tutorial theke dekhe dekhe sob sikci. Bolte gele just copy paste korci sob kicu. To majhe pakami kore 22GB diye blackarch install korcilam vmware a. To blackarch maybe jkno akta Window Manager use kortacilo. R amr tkhn Window Manager somporkte kno idea e cilo na oi jonno ami oi vabe jinis gula bujhi nai r useo kora hoi nai kno smy. Er pore ami mainly Ubuntu use kora suru kori. To er pore ase akta turning point amr life er. Ami first leonardotamiano er youtube ta dekhi to onar video and workflow dekhe ami to purai obak j ayta ki. kno mouse nai kiccu na kmne kmne koi koi cole jacce kivabe ki kortace uni. ayta ki use kortace. To pore aste aste jante parlam j uni arch linux abong exwm use kortace. EXWM? ayta abr ki jinis. To ami ghataghati suru korlam j jinis ta ki to er pore amr samne first &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Window_manager&quot;&gt;Window Manager&lt;&#x2F;a&gt; er concept ta aslo. Amr first window manager cilo &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;i3wm.org&#x2F;&quot;&gt;i3wm&lt;&#x2F;a&gt;. Ami aste aste motamuti i3 sekha start korcilam kivabe window manager kaj kore kivebe ki hoi sob kicu kivabe config file edit korte hoi file kothai thake config file ki. Ay sob kicu motamuti sekha suru kori abong aste aste jinis gula nia kaj korte thaki.
Er pore ami window Manager sekhar kaj a laiga gelam. J aybar ayta sekha lagbe onar moto configuretion banano lagbe. To prothome ami arch ta install kora sekha suru kori j kivabe kore jehteu amr ay sob dik a kno knowledge e nai so ami asole just tutorial na bujhe e follow kortam even akhono ami ay sob somporkte sikhteci. Ami just akjon beginner. Sob kicu explore kortaci abong sekhar try kortaci. To ami first a jkhn install korte jai tkhn ami kiccu bujhi nai just ay video ta follow korci:&lt;&#x2F;p&gt;
&lt;iframe width=&quot;350&quot; height=&quot;200&quot;
  src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;AYxaNjbC1wg&quot;
  title=&quot;YouTube video player&quot;
  frameborder=&quot;0&quot;
  allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot;
  allowfullscreen&gt;
  &lt;&#x2F;iframe&gt;
&lt;p&gt;Even akhono ami ay same vabe e arch install kori manually pari na. Tobe issa ace Insa’allah aste aste sekhar jate sob jinis gula bujhte pari j kivabe ki kaj kore. To Akhn as a main os ami &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archlinux.org&#x2F;&quot;&gt;Arch Linux&lt;&#x2F;a&gt; abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment&quot;&gt;DE&lt;&#x2F;a&gt; abong &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Window_manager&quot;&gt;WM&lt;&#x2F;a&gt; hisabe Emacs x Window Manager mane &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emacs-exwm&#x2F;exwm&quot;&gt;EXMW&lt;&#x2F;a&gt; use korci.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;So ayta cilo akta short introduction j ami ki ki use kortaci mainly r kivabe full system setup kora jai oibepare poroborti te kotha hobe insa’allah.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>whoami</title>
        <published>2025-07-29T00:00:00+00:00</published>
        <updated>2025-07-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://nothing-r.github.io/The_Orcas/whoami/whoami/"/>
        <id>https://nothing-r.github.io/The_Orcas/whoami/whoami/</id>
        
        <content type="html" xml:base="https://nothing-r.github.io/The_Orcas/whoami/whoami/">&lt;h1 id=&quot;whoami&quot;&gt;WHOAMI&lt;&#x2F;h1&gt;
&lt;p&gt;That’s a question! Who am I. Acctually I am just a curious person who have a dream. A dream to be someone oneday! All of this are the step towards the goal.&lt;&#x2F;p&gt;
&lt;p&gt;My Name is Ridowan. And I am just a curious learner who want to know about the digital world.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
